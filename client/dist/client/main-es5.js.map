{"version":3,"sources":["webpack:///src/app/components/basic/landing/landing.component.ts","webpack:///src/app/components/basic/landing/landing.component.html","webpack:///src/app/services/alert.service.ts","webpack:///src/app/components/dashboard/update-project/update-project.component.ts","webpack:///src/app/components/dashboard/update-project/update-project.component.html","webpack:///src/app/services/error.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/basic/not-found/not-found.component.ts","webpack:///src/app/components/basic/not-found/not-found.component.html","webpack:///src/app/components/auth/signup/signup.component.ts","webpack:///src/app/components/auth/signup/signup.component.html","webpack:///src/app/components/taskboard/taskboard.component.ts","webpack:///src/app/components/taskboard/taskboard.component.html","webpack:///src/app/components/layout/footer/footer.component.ts","webpack:///src/app/components/layout/footer/footer.component.html","webpack:///src/app/components/auth/login/login.component.ts","webpack:///src/app/components/auth/login/login.component.html","webpack:///src/app/components/basic/not-authorized/not-authorized.component.ts","webpack:///src/app/components/basic/not-authorized/not-authorized.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/taskboard/update-project-task/update-project-task.component.ts","webpack:///src/app/components/taskboard/update-project-task/update-project-task.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/routing/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/project.service.ts","webpack:///src/app/components/layout/spinner/spinner.component.ts","webpack:///src/app/components/layout/spinner/spinner.component.html","webpack:///src/app/components/layout/alert/alert.component.ts","webpack:///src/app/components/layout/alert/alert.component.html","webpack:///src/app/services/project-task.service.ts","webpack:///src/app/components/dashboard/create-project/create-project.component.ts","webpack:///src/app/components/dashboard/create-project/create-project.component.html","webpack:///src/app/services/header.service.ts","webpack:///src/app/components/taskboard/project-task-item/project-task-item.component.ts","webpack:///src/app/components/taskboard/project-task-item/project-task-item.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/components/dashboard/project-item/project-item.component.ts","webpack:///src/app/components/dashboard/project-item/project-item.component.html","webpack:///src/app/components/taskboard/create-project-task/create-project-task.component.ts","webpack:///src/app/components/taskboard/create-project-task/create-project-task.component.html","webpack:///src/main.ts","webpack:///src/app/components/layout/navbar/navbar.component.ts","webpack:///src/app/components/layout/navbar/navbar.component.html","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LandingComponent","authService","isAuthenticated","getCurrentAuthState","authStateSub","getAuthStateSubject","subscribe","authState","unsubscribe","selector","templateUrl","AlertService","alertStateSubject","initialAlertState","currentAlertState","asObservable","id","filter","alert","next","msg","alertType","timeout","newAlert","setTimeout","removeAlert","providedIn","UpdateProjectComponent","projectService","route","router","form","name","description","start","end","projectState","getCurrentProjectState","projectStateSub","getProjectStateSubject","loadedProject","project","resetState","navigate","setValue","routeSub","params","getProject","updateProject","value","ErrorInterceptor","alertService","req","handle","pipe","error","errors","setAlert","logout","forEach","environment","production","proxy","NotFoundComponent","SignUpComponent","password","password2","signup","email","onSubmit","TaskBoardComponent","projectTaskService","todoItems","inProgressItems","doneItems","getProjectTasks","projectTaskState","getCurrentProjectTaskState","projectTaskStateSub","getProjectTaskStateSubject","i","projectTasks","length","status","push","FooterComponent","LoginComponent","login","NotAuthorizedComponent","DashboardComponent","getProjects","UpdateProjectTaskComponent","summary","criteria","due","priority","loadedProjectTask","projectTask","updateProjectTask","AppComponent","localStorage","token","loadUser","routes","path","component","AppRoutingModule","forRoot","imports","exports","providers","AppModule","provide","useClass","multi","declarations","bootstrap","BACKEND_URL","ProjectService","http","projectStateSubject","initialState","projects","loadedProjects","currentState","get","res","formData","post","err","patch","SpinnerComponent","AlertComponent","alerts","getCurrentAlertState","alertStateSub","getAlertStateSubject","alertState","ProjectTaskService","projectTaskStateSubject","loadedProjectTasks","projectId","projectTaskId","CreateProjectComponent","createProject","HeaderInterceptor","authRequest","clone","headers","set","ProjectTaskItemComponent","priorityClass","deleteProjectTask","onClick","AuthService","authStateSubject","initialAuthState","user","removeItem","setItem","ProjectItemComponent","deleteProject","CreateProjectTaskComponent","createProjectTask","bootstrapModule","console","NavbarComponent","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"../../../services/auth.service\"\r\nimport { Auth } from \"../../../types/states\"\r\n\r\n@Component({\r\n    selector: \"Landing\",\r\n    templateUrl: \"./landing.component.html\"\r\n})\r\nexport class LandingComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n    }\r\n}\r\n","<section class=\"full\">\r\n    <div class=\"landing\">\r\n        <Alert></Alert>\r\n        <h1 class=\"x-large\">\r\n            Personal Project Management Tool\r\n        </h1>\r\n        <p class=\"lead\">\r\n            Create your account to join active projects or start your own\r\n        </p>\r\n        <hr/>\r\n        <div class=\"my-1\" *ngIf=\"!isAuthenticated\">\r\n            <a class=\"btn bg-primary\" routerLink=\"/register\">Sign up</a>\r\n            <a class=\"btn bg-light\" routerLink=\"login\">Login</a>\r\n        </div>\r\n    </div>\r\n</section>\r\n<Footer></Footer>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Alert } from \"../types/states\"\r\nimport { Subject } from \"rxjs\";\r\nimport { v4 } from \"uuid\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AlertService {\r\n    private alertStateSubject = new Subject<Alert[]>();\r\n    private initialAlertState: Alert[] = []\r\n    private currentAlertState: Alert[] = [...this.initialAlertState];\r\n\r\n    getCurrentAlertState() {\r\n        return this.currentAlertState;\r\n    }\r\n\r\n    getAlertStateSubject() {\r\n        return this.alertStateSubject.asObservable();\r\n    }\r\n\r\n    removeAlert(id: string) {\r\n        this.currentAlertState = this.currentAlertState.filter(alert => alert.id !== id);\r\n        this.alertStateSubject.next(this.currentAlertState);\r\n    }\r\n\r\n    setAlert(msg: string, alertType: string, timeout : number = 2000) {\r\n        let newAlert : Alert = {\r\n            msg,\r\n            alertType,\r\n            id: v4()\r\n        }\r\n        this.currentAlertState = [...this.currentAlertState, newAlert]\r\n        this.alertStateSubject.next(this.currentAlertState);\r\n        setTimeout(() => {\r\n            this.removeAlert(newAlert.id);\r\n        }, timeout);\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth } from \"src/app/types/states\";\r\nimport { Project } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./update-project.component.html\"\r\n})\r\nexport class UpdateProjectComponent {\r\n    isAuthenticated : boolean;\r\n    projectState: Project;\r\n    private authStateSub: Subscription;\r\n    private projectStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n    form: FormGroup\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService, \r\n                private route: ActivatedRoute, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.form = new FormGroup({\r\n            name: new FormControl(null),\r\n            description: new FormControl(null),\r\n            start: new FormControl(null),\r\n            end: new FormControl(null)\r\n        })\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectState = this.projectService.getCurrentProjectState()\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState: Project) => {\r\n            this.projectState = projectState\r\n            if (projectState.loadedProject && projectState.project === null) {\r\n                this.projectService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            } else {\r\n                this.form.setValue({\r\n                    name: projectState.project.name,\r\n                    description: projectState.project.description,\r\n                    start: projectState.project.start,\r\n                    end: projectState.project.end\r\n                })\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectService.getProject(params[\"id\"]);\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.projectService.updateProject(this.projectState.project.id, this.form.value.name, this.form.value.description, \r\n                                          this.form.value.start, this.form.value.end)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary\">Update Project Form</h1>\r\n        <p class=\"lead\">\r\n            <i class=\"fas fa-pen\"></i>\r\n            <span class=\"hide-mobile\"> Update An Existing Project</span>\r\n        </p>\r\n        <form [formGroup]=\"form\" class=\"form\" (submit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Name\"\r\n                    formControlName=\"name\"\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Description\"\r\n                    formControlName=\"description\"\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <span>Start Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"start\"\r\n                    formControlName=\"start\"\r\n                />\r\n                <span>End Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"end\"\r\n                    formControlName=\"end\"\r\n                />\r\n            </div>\r\n            <input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n        </form>\r\n    </section>\r\n</div>\r\n","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { EMPTY, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AlertService } from \"./alert.service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(private alertService: AlertService, private authService: AuthService) {}\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        return next.handle(req).pipe(\r\n            catchError((error : HttpErrorResponse) => {\r\n                if (error.error.errors[0].msg === \"Invalid token, authorization denied\") {\r\n                    this.alertService.setAlert(\"Session expire\", \"danger\");\r\n                    this.authService.logout();\r\n                    return EMPTY;\r\n                } else if (error.error.errors[0].msg === \"Project Not Found\" || error.error.errors[0].msg === \"Project Task Not Found\") {\r\n                    error.error.errors.forEach(error => this.alertService.setAlert(error.msg, \"danger\"))\r\n                    return throwError(error);\r\n                } else {\r\n                    error.error.errors.forEach(error => this.alertService.setAlert(error.msg, \"danger\"))\r\n                    return EMPTY;\r\n                }\r\n            })\r\n        )\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  proxy: \"http://localhost:4000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    templateUrl: \"./not-found.component.html\"\r\n})\r\nexport class NotFoundComponent {}\r\n","<Alert></Alert>\r\n<section class=\"container full\">\r\n    <h1 class=\"large text-primary\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i>\r\n        <span> 404 Page Not Found</span>\r\n    </h1>\r\n    <p class=\"lead\">Sorry this page does not exist</p>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { AlertService } from \"src/app/services/alert.service\";\r\nimport { AuthService } from \"../../../services/auth.service\"\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Auth } from \"../../../types/states\"\r\n\r\n@Component({\r\n    templateUrl: \"./signup.component.html\"\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private alertService: AlertService, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n            if (this.isAuthenticated) {\r\n                this.router.navigate([\"/\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        if (form.value.password !== form.value.password2) {\r\n            this.alertService.setAlert('Password do not match', 'danger', 3000);\r\n        }\r\n        this.authService.signup(form.value.name, form.value.email, form.value.password)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n    }\r\n}\r\n","<Alert></Alert>\r\n<section class=\"container\">\r\n    <h1 class=\"large primary\">Sign Up</h1>\r\n    <p class=\"lead\">\r\n        <i class=\"fas fa-user\"></i>\r\n        <span class=\"hide-mobile\"> Create Your Account</span>\r\n    </p>\r\n    <form class=\"form\" (submit)=\"onSubmit(signupForm)\" #signupForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Full Name\"\r\n                name=\"name\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Email Address\"\r\n                name=\"email\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <input type=\"submit\" class=\"my-1 btn bg-primary\" value=\"Register\" />\r\n    </form>\r\n    <div>\r\n        <p>\r\n            Already have an account?\r\n        </p>\r\n        <a routerLink=\"/login\">Sign In</a>\r\n    </div>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth, Project, ProjectTask } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./taskboard.component.html\"\r\n})\r\nexport class TaskBoardComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    projectTaskState: ProjectTask;\r\n    todoItems : any[] = [];\r\n    inProgressItems: any[] = [];\r\n    doneItems: any[] = [];\r\n    id: string;\r\n    private authStateSub: Subscription;\r\n    private projectStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n    private projectTaskStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService, \r\n        private route: ActivatedRoute, private router: Router, private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState: Project) => {\r\n            if (projectState.loadedProject && projectState.project === null) {\r\n                this.projectService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            } else {\r\n                this.projectTaskService.getProjectTasks(this.id)\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectService.getProject(params[\"id\"]);\r\n            this.id = params[\"id\"]\r\n        })\r\n        this.projectTaskState = this.projectTaskService.getCurrentProjectTaskState();\r\n        this.projectTaskStateSub = this.projectTaskService.getProjectTaskStateSubject().subscribe((projectTaskState: ProjectTask) => {\r\n            this.todoItems = [];\r\n            this.inProgressItems = [];\r\n            this.doneItems = [];\r\n            this.projectTaskState = projectTaskState;\r\n            for (let i = 0; i < this.projectTaskState.projectTasks.length; i++) {\r\n                if (this.projectTaskState.projectTasks[i].status === \"TO DO\") {\r\n                    this.todoItems.push(this.projectTaskState.projectTasks[i]);\r\n                }\r\n          \r\n                if (this.projectTaskState.projectTasks[i].status === \"IN PROGRESS\") {\r\n                    this.inProgressItems.push(this.projectTaskState.projectTasks[i]);\r\n                }\r\n          \r\n                if (this.projectTaskState.projectTasks[i].status === \"DONE\") {\r\n                    this.doneItems.push(this.projectTaskState.projectTasks[i]);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n        this.projectTaskStateSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <a [routerLink]=\"['../../create-project-task', id]\" class=\"btn bg-light dark\">\r\n            <i class=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </a>\r\n        <hr class=\"my-1\"/>\r\n        <div class=\"project-task\">\r\n        \t<div>\r\n        \t\t<div class=\"project-task-category bg-dark\">\r\n            \t\t<h3 class=\"white\">\r\n            \t\t\tTODO\r\n            \t\t</h3>\r\n            \t</div>\r\n            \t<ProjectTaskItem *ngFor=\"let projectTask of todoItems\" [projectTask]=\"projectTask\" [project]=\"id\">\r\n                </ProjectTaskItem>\r\n        \t</div>\r\n        \t<div>\r\n        \t\t<div class=\"project-task-category bg-primary\">\r\n            \t\t<h3 class=\"white\">\r\n            \t\t\tIN-PROGRESS\r\n            \t\t</h3>\r\n            \t</div>\r\n            \t<ProjectTaskItem *ngFor=\"let projectTask of inProgressItems\" [projectTask]=\"projectTask\" [project]=\"id\">\r\n                </ProjectTaskItem>\r\n        \t</div>\r\n        \t<div>\r\n    \t\t\t<div class=\"project-task-category bg-success\">\r\n\t\t\t\t\t<h3 class=\"white\">\r\n\t\t\t\t\t\tDONE\r\n\t\t\t\t\t</h3>\r\n            \t</div>\r\n            \t<ProjectTaskItem *ngFor=\"let projectTask of doneItems\" [projectTask]=\"projectTask\" [project]=\"id\">    \r\n                </ProjectTaskItem> \r\n        \t</div>\r\n\t\t</div>\r\n    </section>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"Footer\",\r\n    templateUrl: \"./footer.component.html\"\r\n})\r\nexport class FooterComponent {}\r\n","<footer class=\"footer hide-mobile\">\r\n    <div class=\"item\">\r\n        <span>Author: Vincent Yang</span>\r\n        <p class=\"footer-links\">\r\n            <a href=\"https://vincent-yang.com\">Personal Website</a>\r\n            <span> | </span>\r\n            <a href=\"https://github.com/Yangv19\">Github</a>\r\n        </p>\r\n    </div>\r\n    <div class=\"item\">    \r\n        <div>\r\n            <i class=\"fa fa-phone\"></i>\r\n            <span> 647-636-3461</span>\r\n        </div>\r\n        <div>\r\n            <i class=\"fa fa-envelope\"></i>\r\n            <span> v6yang@uwaterloo.ca</span>\r\n        </div>\r\n    </div>\r\n</footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AlertService } from \"src/app/services/alert.service\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Auth } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./login.component.html\"\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private alertService: AlertService, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n            if (this.isAuthenticated) {\r\n                this.router.navigate([\"/\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        this.authService.login(form.value.email, form.value.password)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n    }\r\n}\r\n","<Alert></Alert>\r\n<section class=\"container\">\r\n    <h1 class=\"large primary\">Sign In</h1>\r\n    <p class=\"lead\">\r\n        <i class=\"fas fa-user\"></i>\r\n        <span class=\"hide-mobile\"> Sign Into Your Account</span>\r\n    </p>\r\n    <form class=\"form\" (submit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Email Address\"\r\n                name=\"email\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <input type=\"submit\" class=\"btn bg-primary\" value=\"Login\" />\r\n    </form>\r\n    <div class=\"my-1\">\r\n        <p>\r\n            Don\"t have an account?\r\n        </p>\r\n        <a routerLink=\"/register\">Sign Up</a>\r\n    </div>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"NotAuthorized\",\r\n    templateUrl: \"./not-authorized.component.html\"\r\n})\r\nexport class NotAuthorizedComponent {}\r\n","<Alert></Alert>\r\n<section class=\"container full\">\r\n    <h1 class=\"large text-primary\">\r\n        <i class=\"fas fa-skull-crossbones\"></i>\r\n        <span> 401 Not Authorized</span>\r\n    </h1>\r\n    <p class=\"lead\">Sorry you are not authorized to view this page</p>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Project } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./dashboard.component.html\"\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy{\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n    projectState: Project\r\n    private projectStateSub: Subscription\r\n\r\n    constructor(private authService: AuthService, private router: Router, private projectService: ProjectService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectState = this.projectService.getCurrentProjectState()\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState) => {\r\n            this.projectState = projectState\r\n        });\r\n        this.projectService.getProjects();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Spinner *ngIf=\"!projectState.loadedProjects\"></Spinner> \r\n    <Alert></Alert>\r\n    <section class=\"container\" *ngIf=\"projectState.loadedProjects\">\r\n        <h1 class=\"x-large center\">\r\n            Projects\r\n        </h1>\r\n        <a class=\"btn bg-light dark\" routerLink=\"../create-project\">\r\n            <i class=\"fas fa-plus-circle\"> Create A Project</i>\r\n        </a>\r\n        <hr class=\"my-1\"/>\r\n        <ProjectItem *ngFor=\"let project of projectState.projects\" [project]=\"project\"></ProjectItem>\r\n    </section>   \r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth, ProjectTask } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./update-project-task.component.html\"\r\n})\r\nexport class UpdateProjectTaskComponent implements OnInit, OnDestroy{\r\n    isAuthenticated : boolean;\r\n    projectTaskState: ProjectTask;\r\n    private project: string;\r\n    private authStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n    private projectTaskStateSub: Subscription;\r\n    form: FormGroup\r\n\r\n    constructor(private authService: AuthService, private route: ActivatedRoute, private router: Router, \r\n                private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        this.form = new FormGroup({\r\n            summary: new FormControl(null),\r\n            criteria: new FormControl(null),\r\n            due: new FormControl(null),\r\n            priority: new FormControl(null),\r\n            status: new FormControl(null)\r\n        })\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectTaskStateSub = this.projectTaskService.getProjectTaskStateSubject().subscribe((projectTaskState: ProjectTask) => {\r\n            this.projectTaskState = projectTaskState\r\n            if (projectTaskState.loadedProjectTask && projectTaskState.projectTask === null) {\r\n                this.projectTaskService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            } else {\r\n                this.form.setValue({\r\n                    summary: projectTaskState.projectTask.summary,\r\n                    criteria: projectTaskState.projectTask.criteria,\r\n                    due: projectTaskState.projectTask.due,\r\n                    priority: projectTaskState.projectTask.priority,\r\n                    status: projectTaskState.projectTask.status\r\n                })\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectTaskService.getProject(params[\"projectId\"], params[\"projectTaskId\"]);\r\n            this.project = params[\"projectId\"];\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.projectTaskService.updateProjectTask(this.project, this.projectTaskState.projectTask.id, this.form.value.summary, \r\n                                                  this.form.value.criteria, this.form.value.due, this.form.value.priority, \r\n                                                  this.form.value.status)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n        this.projectTaskStateSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary my-1\">Update Project Task Form</h1>\r\n\t\t\t<p class=\"lead\">\r\n\t\t\t\t<i class=\"fas fa-pen\"></i>\r\n\t\t\t\t<span class=\"hide-mobile\"> Update This Project Task</span>\r\n\t\t\t</p>\r\n\t\t\t<form class=\"form\" [formGroup]=\"form\" (submit)=\"onSubmit()\"> \r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Task summary\"\r\n                        formControlName=\"summary\" \r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<textarea \r\n                        placeholder=\"Acceptance Criteria\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        formControlName=\"criteria\">\r\n                    </textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<span>Due Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        formControlName=\"due\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                    <select formControlName=\"priority\">\r\n\t\t\t\t\t\t<option value=\"\">Select Priority</option>\r\n\t\t\t\t\t\t<option value=\"HIGH\">HIGH</option>\r\n\t\t\t\t\t\t<option value=\"MEDIUM\">MEDIUM</option>\r\n\t\t\t\t\t\t<option value=\"LOW\">LOW</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n                    <select formControlName=\"status\"> \r\n\t\t\t\t\t\t<option value=\"\">Select Status</option>\r\n\t\t\t\t\t\t<option value=\"TO DO\">TO DO</option>\r\n\t\t\t\t\t\t<option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n\t\t\t\t\t\t<option value=\"DONE\">DONE</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n\t\t\t</form>\r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    if (localStorage.token) {\n      this.authService.loadUser();\n    }\n  }\n}\n","<Navbar></Navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent } from \"../components/auth/login/login.component\";\r\nimport { SignUpComponent } from \"../components/auth/signup/signup.component\";\r\nimport { LandingComponent } from \"../components/basic/landing/landing.component\";\r\nimport { NotFoundComponent } from \"../components/basic/not-found/not-found.component\";\r\nimport { CreateProjectComponent } from \"../components/dashboard/create-project/create-project.component\";\r\nimport { DashboardComponent } from \"../components/dashboard/dashboard.component\";\r\nimport { UpdateProjectComponent } from \"../components/dashboard/update-project/update-project.component\";\r\nimport { CreateProjectTaskComponent } from \"../components/taskboard/create-project-task/create-project-task.component\";\r\nimport { TaskBoardComponent } from \"../components/taskboard/taskboard.component\";\r\nimport { UpdateProjectTaskComponent } from \"../components/taskboard/update-project-task/update-project-task.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: LandingComponent\r\n    },\r\n    {\r\n        path: \"register\",\r\n        component: SignUpComponent\r\n    },\r\n    {\r\n        path: \"login\",\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent\r\n    },\r\n    {\r\n        path: \"create-project\",\r\n        component: CreateProjectComponent\r\n    },\r\n    {\r\n        path: \"update-project/:id\",\r\n        component: UpdateProjectComponent\r\n    },\r\n    {\r\n        path: \"taskboard/:id\",\r\n        component: TaskBoardComponent\r\n    },\r\n    {\r\n        path: \"create-project-task/:id\",\r\n        component: CreateProjectTaskComponent\r\n    },\r\n    {\r\n        path: \"update-project-task/:projectId/:projectTaskId\",\r\n        component: UpdateProjectTaskComponent\r\n    },\r\n    {\r\n        path: \"**\",\r\n        component: NotFoundComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: []\r\n})\r\nexport class AppRoutingModule {}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ErrorInterceptor } from './services/error.service';\nimport { HeaderInterceptor } from './services/header.service';\nimport { NavbarComponent } from './components/layout/navbar/navbar.component';\nimport { AlertComponent } from './components/layout/alert/alert.component';\nimport { FooterComponent } from './components/layout/footer/footer.component';\nimport { LandingComponent } from './components/basic/landing/landing.component';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { SignUpComponent } from './components/auth/signup/signup.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { NotFoundComponent } from './components/basic/not-found/not-found.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { NotAuthorizedComponent } from './components/basic/not-authorized/not-authorized.component';\nimport { SpinnerComponent } from './components/layout/spinner/spinner.component';\nimport { ProjectItemComponent } from './components/dashboard/project-item/project-item.component';\nimport { CreateProjectComponent } from './components/dashboard/create-project/create-project.component';\nimport { UpdateProjectComponent } from './components/dashboard/update-project/update-project.component';\nimport { TaskBoardComponent } from './components/taskboard/taskboard.component';\nimport { ProjectTaskItemComponent } from './components/taskboard/project-task-item/project-task-item.component';\nimport { CreateProjectTaskComponent } from './components/taskboard/create-project-task/create-project-task.component';\nimport { UpdateProjectTaskComponent } from './components/taskboard/update-project-task/update-project-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    AlertComponent,\n    FooterComponent,\n    LandingComponent,\n    SignUpComponent,\n    LoginComponent,\n    NotFoundComponent,\n    NotAuthorizedComponent,\n    DashboardComponent,\n    SpinnerComponent,\n    ProjectItemComponent,\n    CreateProjectComponent,\n    UpdateProjectComponent,\n    TaskBoardComponent,\n    ProjectTaskItemComponent,\n    CreateProjectTaskComponent,\n    UpdateProjectTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HeaderInterceptor,\n      multi: true\n    },  \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\"\r\nimport { Project } from \"../types/states\"\r\nimport { Subject } from \"rxjs\";\r\nimport { AlertService } from \"./alert.service\";\r\nimport { ProjectForm } from \"../types/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nconst BACKEND_URL = environment.proxy;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class ProjectService {\r\n    private projectStateSubject = new Subject<Project>();\r\n    private initialState : Project = {\r\n        projects: [],\r\n        project: null,\r\n        loadedProjects: false,\r\n        loadedProject: false\r\n    }\r\n    private currentState : Project = {\r\n        ...this.initialState\r\n    }\r\n\r\n    constructor(private http : HttpClient, private alertService: AlertService, private router: Router) {}\r\n\r\n    getCurrentProjectState() {\r\n        return this.currentState;\r\n    }\r\n\r\n    getProjectStateSubject() {\r\n        return this.projectStateSubject.asObservable();\r\n    }\r\n\r\n    getProjects() {\r\n        this.http.get<any[]>(BACKEND_URL + \"/api/projects\").subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projects: res,\r\n                loadedProjects: true\r\n            }\r\n            this.projectStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    deleteProject(id : string) {\r\n        this.http.delete(BACKEND_URL + \"/api/projects/\" + id).subscribe(res => {\r\n            this.alertService.setAlert(\"Post Removed\", \"success\");\r\n            this.getProjects();\r\n        })\r\n    }\r\n\r\n    createProject(name: string, description: string, start: string, end: string) {\r\n        const formData: ProjectForm = {\r\n            name,\r\n            description,\r\n            start,\r\n            end\r\n        }\r\n        this.http.post(BACKEND_URL + \"/api/projects\", formData).subscribe(res => {\r\n            this.alertService.setAlert(\"Project Created\", \"success\");\r\n            this.router.navigate([\"dashboard\"]);\r\n        })\r\n    }\r\n\r\n    getProject(id : string) {\r\n        this.http.get<any[]>(BACKEND_URL + \"/api/projects/\" + id).subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                project: res,\r\n                loadedProject: true\r\n            }\r\n            this.projectStateSubject.next({\r\n                ...this.currentState});\r\n        }, err => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                project: null,\r\n                loadedProject: true\r\n            }\r\n            this.projectStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    resetState() {\r\n        this.currentState = {\r\n            ...this.initialState\r\n        }\r\n    }\r\n\r\n    updateProject(id: string, name: string, description: string, start: string, end: string) {\r\n        const formData: ProjectForm = {\r\n            name,\r\n            description,\r\n            start,\r\n            end\r\n        }\r\n        this.http.patch(BACKEND_URL + \"/api/projects/\" + id, formData).subscribe(res => {\r\n            this.alertService.setAlert(\"Post updated\", \"success\");\r\n            this.router.navigate([\"dashboard\"]);\r\n        })\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"Spinner\",\r\n    templateUrl: \"./spinner.component.html\"\r\n})\r\nexport class SpinnerComponent{}\r\n","<img\r\n    src=\"assets/img/spinner.gif\"\r\n    alt=\"\"\r\n    class=\"spinner\"\r\n>\r\n","import { Component, OnDestroy, OnInit  } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Alert } from \"../../../types/states\"\r\nimport { AlertService } from \"../../../services/alert.service\"\r\n\r\n@Component({\r\n    selector: \"Alert\",\r\n    templateUrl: \"./alert.component.html\"\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    alerts: Alert[];\r\n    private alertStateSub: Subscription;\r\n\r\n    constructor(private alertService: AlertService) {}\r\n    \r\n    ngOnInit() {\r\n        this.alerts = this.alertService.getCurrentAlertState();\r\n        this.alertStateSub = this.alertService.getAlertStateSubject().subscribe((alertState : Alert[]) => {\r\n            this.alerts = alertState;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.alertStateSub.unsubscribe();\r\n    }\r\n}\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert bg-{{alert.alertType}}\">\r\n    {{alert.msg}}\r\n</div>\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { environment } from \"../../environments/environment\"\r\nimport { AlertService } from \"./alert.service\";\r\nimport { ProjectTask } from \"../types/states\"\r\nimport { ProjectTaskForm } from \"../types/forms\";\r\n\r\nconst BACKEND_URL = environment.proxy;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class ProjectTaskService {\r\n    private projectTaskStateSubject = new Subject<ProjectTask>();\r\n    private initialState : ProjectTask = {\r\n        projectTasks: [],\r\n        projectTask: null,\r\n        loadedProjectTasks: false,\r\n        loadedProjectTask: false\r\n    }\r\n    private currentState : ProjectTask = {\r\n        ...this.initialState\r\n    }\r\n\r\n    constructor(private http : HttpClient, private alertService: AlertService, private router: Router) {}\r\n\r\n    getCurrentProjectTaskState() {\r\n        return this.currentState;\r\n    }\r\n\r\n    getProjectTaskStateSubject() {\r\n        return this.projectTaskStateSubject.asObservable();\r\n    }\r\n\r\n    getProjectTasks(id: string) {\r\n        this.http.get<any[]>(BACKEND_URL + \"/api/projectTasks/\" + id).subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projectTasks: res,\r\n                loadedProjectTasks: true\r\n            }\r\n            this.projectTaskStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    deleteProjectTask(projectId: string, projectTaskId: string) {\r\n        this.http.delete(BACKEND_URL + \"/api/projectTasks/\" + projectId + \"/\" + projectTaskId).subscribe(res => {\r\n            this.alertService.setAlert(\"Project Task Removed\", \"success\")\r\n            this.getProjectTasks(projectId);\r\n        })\r\n    }\r\n\r\n    createProjectTask(projectId: string, summary: string, criteria: string, due: string, priority: string, status: string) {\r\n        const formData : ProjectTaskForm = {\r\n            summary,\r\n            criteria,\r\n            due,\r\n            priority,\r\n            status\r\n        }\r\n        this.http.post(BACKEND_URL + \"/api/projectTasks/\" + projectId, formData).subscribe(res => {\r\n            this.alertService.setAlert(\"ProjectTask Created\", \"success\");\r\n            this.router.navigate([\"taskboard/\" + projectId]);\r\n        })\r\n    }\r\n\r\n    getProject(projectId: string, projectTaskId: string) {\r\n        this.http.get(BACKEND_URL + \"/api/projectTasks/\" + projectId + \"/\" + projectTaskId).subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projectTask: res,\r\n                loadedProjectTask: true\r\n            }\r\n            this.projectTaskStateSubject.next({\r\n                ...this.currentState});\r\n        }, err => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projectTask: null,\r\n                loadedProjectTask: true\r\n            }\r\n            this.projectTaskStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    resetState() {\r\n        this.currentState = {\r\n            ...this.initialState\r\n        }\r\n    }\r\n\r\n    updateProjectTask(projectId: string, projectTaskId: string, summary: string, criteria: string, due: string, priority: string, status: string) {\r\n        const formData: ProjectTaskForm = {\r\n            summary,\r\n            criteria,\r\n            due,\r\n            priority,\r\n            status\r\n        }\r\n        this.http.patch(BACKEND_URL + \"/api/projectTasks/\" + projectId + \"/\" + projectTaskId, formData).subscribe(res => {\r\n            this.alertService.setAlert(\"Project Task updated\", \"success\");\r\n            this.router.navigate([\"taskboard/\" + projectId]);\r\n        })\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Auth } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./create-project.component.html\"\r\n})\r\nexport class CreateProjectComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        this.projectService.createProject(form.value.name, form.value.description, form.value.start, form.value.end);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary\">Create Project Form</h1>\r\n        <p class=\"lead\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            <span class=\"hide-mobile\"> Create A New Project</span>\r\n        </p>\r\n        <form class=\"form\" #createProjectForm=\"ngForm\" (submit)=\"onSubmit(createProjectForm)\">\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Name\" \r\n                    name=\"name\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <span>Start Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"start\"\r\n                    ngModel\r\n                />\r\n                <span>End Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"end\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n        </form>\r\n    </section>\r\n</div>\r\n","import { HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (localStorage.token) {\r\n            const authRequest = req.clone({\r\n                headers: req.headers.set(\"x-auth-token\", localStorage.token)\r\n            });\r\n            return next.handle(authRequest);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\n\r\n@Component({\r\n    selector: \"ProjectTaskItem\",\r\n    templateUrl: \"./project-task-item.component.html\"\r\n})\r\nexport class ProjectTaskItemComponent implements OnInit {\r\n    @Input() \r\n    projectTask: any;\r\n\r\n    @Input()\r\n    project: string;\r\n\r\n    priorityClass: string;\r\n\r\n    constructor(private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        if (this.projectTask.priority === \"HIGH\") {\r\n            this.priorityClass = \"bg-danger\";\r\n        };\r\n      \r\n        if (this.projectTask.priority === \"MEDIUM\") {\r\n            this.priorityClass = \"bg-yellow\";\r\n        };\r\n    \r\n        if (this.projectTask.priority === \"LOW\") {\r\n            this.priorityClass = \"bg-light-blue\";\r\n        };\r\n    }\r\n\r\n    onClick(projectId: string, projectTaskId: string) {\r\n        this.projectTaskService.deleteProjectTask(projectId, projectTaskId);\r\n    }\r\n}\r\n","<div class=\"bg-gray project-task-item\">\r\n    <h4 class={{priorityClass}}>\r\n        Priority: {{projectTask.priority}}\r\n    </h4>\r\n    <h4>{{projectTask.summary}}</h4>\r\n    <h4>{{projectTask.criteria}}</h4>\r\n    <h4>Deadline: {{projectTask.due.slice(0, 10)}}</h4>\r\n    <a [routerLink]=\"['../../update-project-task', project, projectTask.id]\" class=\"btn bg-primary\">\r\n        Update\r\n    </a>\r\n    <div class=\"btn bg-danger\" (click)=\"onClick(project, projectTask.id)\">\r\n        Delete\r\n    </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\"\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { Auth } from \"../types/states\"\r\nimport { Subject } from \"rxjs\";\r\nimport { RegisterForm, LoginForm } from \"../types/forms\"\r\n\r\nconst BACKEND_URL = environment.proxy;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n    private authStateSubject = new Subject<Auth>();\r\n    private initialAuthState: Auth = {\r\n        isAuthenticated: false,\r\n        user: null\r\n    }\r\n    private currentState : Auth = {\r\n        ...this.initialAuthState\r\n    }\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    loadUser() {\r\n        this.http.get(BACKEND_URL + \"/api/users\").subscribe(res => {\r\n            this.currentState.isAuthenticated = true;\r\n            this.currentState.user = res;\r\n            this.authStateSubject.next({\r\n                isAuthenticated : true, \r\n                user : res});\r\n        })\r\n    }\r\n\r\n    getCurrentAuthState() {\r\n        return this.currentState;\r\n    }\r\n\r\n    getAuthStateSubject() {\r\n        return this.authStateSubject.asObservable();\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"token\");\r\n        this.currentState = {\r\n            ...this.initialAuthState\r\n        }\r\n        this.authStateSubject.next(this.initialAuthState);\r\n    }\r\n\r\n    signup(name: string, email: string, password: string) {\r\n        const formData: RegisterForm = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n        this.http.post<{token: string}>(BACKEND_URL + \"/api/users/register\", formData).subscribe(res => {\r\n            this.currentState.isAuthenticated = true;\r\n            this.currentState.user = res;\r\n            localStorage.setItem(\"token\", res.token);\r\n            this.loadUser();\r\n        })\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        const formData: LoginForm = {\r\n            email,\r\n            password\r\n        }\r\n        this.http.post<{token: string}>(BACKEND_URL + \"/api/users/login\", formData).subscribe(res => {\r\n            this.currentState.isAuthenticated = true;\r\n            this.currentState.user = res;\r\n            localStorage.setItem(\"token\", res.token);\r\n            this.loadUser();\r\n        })\r\n    }\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\n\r\n@Component({\r\n    selector: \"ProjectItem\",\r\n    templateUrl: \"./project-item.component.html\"\r\n})\r\nexport class ProjectItemComponent {\r\n    @Input() \r\n    project: any;\r\n\r\n    constructor(private projectService: ProjectService) {}\r\n\r\n    onClick(id : string) {\r\n        this.projectService.deleteProject(id);\r\n    }\r\n}\r\n","<div class=\"project\">\r\n    <div class=\"project-1\">\r\n        <div>\r\n            <h4>Deadline:</h4>\r\n            <h4>{{project.end.slice(0, 10)}}</h4>\r\n        </div>\r\n        <div>\r\n            <h4 class=\"lead\">\r\n                {{project.name}}\r\n            </h4>\r\n            <h4 class=\"gray\">\r\n                {{project.description}}\r\n            </h4>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <a [routerLink]=\"['../taskboard', project.id]\" class=\"project-button light\">\r\n            <i class=\"fa fa-flag-checkered\"></i>\r\n            <span class=\"hide-mobile\">\r\n                Project Board\r\n            </span>\r\n        </a>\r\n        <a [routerLink]=\"['../update-project', project.id]\" class=\"project-button success\">\r\n            <i class=\"fa fa-edit\"></i>\r\n            <span class=\"hide-mobile\">\r\n                Update Project Info\r\n            </span>\r\n        </a>\r\n        <div class=\"project-button danger\">\r\n            <i class=\"fa fa-minus-circle\"></i>\r\n            <span class=\"hide-mobile\" (click)=\"onClick(project.id)\">\r\n                Delete Project\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth, Project } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./create-project-task.component.html\"\r\n})\r\nexport class CreateProjectTaskComponent implements OnInit, OnDestroy{\r\n    isAuthenticated : boolean;\r\n    private id;\r\n    private authStateSub: Subscription;\r\n    private projectStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService, \r\n        private route: ActivatedRoute, private router: Router, private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState: Project) => {\r\n            if (projectState.loadedProject && projectState.project === null) {\r\n                this.projectService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectService.getProject(params[\"id\"]);\r\n            this.id = params[\"id\"];\r\n        })\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        this.projectTaskService.createProjectTask(this.id, form.value.summary, form.value.criteria, form.value.due,\r\n                                                  form.value.priority, form.value.status);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary my-1\">Create Project Task Form</h1>\r\n        <p class=\"lead\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            <span class=\"hide-mobile\"> Create A New Project Task</span>\r\n        </p>\r\n        <form class=\"form\" #createProjectTaskForm=\"ngForm\" (submit)=\"onSubmit(createProjectTaskForm)\">\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Task summary\" \r\n                    name=\"summary\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <textarea\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    name=\"criteria\"\r\n                    ngModel>\r\n                </textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <span>Due Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"due\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <select name=\"priority\" ngModel>\r\n                    <option value=\"\">Select Priority</option>\r\n                    <option value=\"HIGH\">HIGH</option>\r\n                    <option value=\"MEDIUM\">MEDIUM</option>\r\n                    <option value=\"LOW\">LOW</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <select name=\"status\" ngModel>\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO DO\">TO DO</option>\r\n                    <option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                </select>\r\n            </div>\r\n            <input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n        </form>\r\n    </section>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"../../../services/auth.service\"\r\nimport { Auth } from \"../../../types/states\"\r\n\r\n@Component({\r\n    selector: 'Navbar',\r\n    templateUrl: './navbar.component.html'\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n    }\r\n}\r\n","<nav class=\"navbar bg-primary\">\r\n    <h2>\r\n        <a routerLink=\"/\">\r\n            <i class=\"fas fa-tasks\"></i>\r\n            <span class=\"hide-mobile\"> Personal Project Management Tool</span>\r\n        </a>\r\n    </h2>\r\n    <ul *ngIf=\"isAuthenticated\">\r\n        <li>\r\n            <a routerLink=\"/dashboard\">\r\n                <i class=\"fas fa-columns\"></i>\r\n                <span class=\"hide-mobile\"> Dashboard</span>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a (click)=\"logout()\">\r\n                <i class=\"fas fa-sign-out-alt\"></i>\r\n                <span class=\"hide-mobile\"> Logout</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n    <ul *ngIf=\"!isAuthenticated\">\r\n        <li>\r\n            <a routerLink=\"/register\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                <span class=\"hide-mobile\"> Register</span>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/login\">\r\n                <i class=\"fas fa-sign-in-alt\"></i>\r\n                <span class=\"hide-mobile\"> Login</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}