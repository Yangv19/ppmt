{"version":3,"sources":["types/actions.tsx","reducers/alert.tsx","reducers/auth.tsx","reducers/project.tsx","reducers/projectTask.tsx","reducers/index.tsx","store.tsx","actions/alert.tsx","actions/errors.tsx","actions/auth.tsx","components/layout/Navbar.tsx","components/layout/Alert.tsx","components/layout/Footer.tsx","components/basic/Landing.tsx","components/auth/Register.tsx","components/auth/Login.tsx","actions/project.tsx","img/spinner.gif","components/layout/Spinner.tsx","components/dashboard/ProjectItem.tsx","components/dashboard/Dashboard.tsx","components/dashboard/CreateProject.tsx","components/dashboard/UpdateProject.tsx","actions/projectTask.tsx","components/taskboard/ProjectTask.tsx","components/taskboard/Backlog.tsx","components/taskboard/Taskboard.tsx","components/taskboard/CreateProjectTask.tsx","components/taskboard/UpdateProjectTask.tsx","components/basic/NotFound.tsx","components/routing/AuthRoutes.tsx","components/basic/NotAuthorized.tsx","components/routing/GuestRoutes.tsx","components/routing/Auth.tsx","App.tsx","index.tsx"],"names":["SET_ALERT","REMOVE_ALERT","LOAD_USER","RESET_AUTH","SET_PROJECTS","SET_PROJECT","PROJECT_ERROR","RESET_PROJECT","SET_PROJECT_TASKS","SET_PROJECT_TASK","PROJECT_TASK_ERROR","RESET_PROJECT_TASK","initialState","isAuthenticated","user","projects","project","loadedProjects","loadedProject","projectTasks","projectTask","loadedProjectTasks","loadedProjectTask","combineReducers","alert","state","action","type","payload","constants","filter","id","auth","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","setAlert","msg","alertType","timeout","dispatch","v4","setTimeout","errors","err","a","response","data","console","error","logout","forEach","localStorage","removeItem","axios","defaults","headers","common","loadUser","get","res","mapDispatch","connector","connect","authLinks","to","className","onClick","e","guestLinks","alerts","map","Footer","href","register","formData","post","setItem","token","history","useState","name","email","password","password2","setFormData","useEffect","push","onChange","target","value","onSubmit","preventDefault","placeholder","login","getProjects","getProject","resetProject","src","spinner","alt","deleteProject","delete","end","slice","description","Spinner","createProject","start","updateProject","patch","match","params","projectId","getProjectTasks","deleteProjectTask","projectTaskId","priorityClass","priority","summary","criteria","due","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","props","status","createProjectTask","cols","rows","getProjectTask","resetProjectTask","updateProjectTask","NotFound","AuthRoutes","exact","path","component","Dashboard","CreateProject","UpdateProject","Taskboard","CreateProjectTask","UpdateProjectTask","NotAuthorized","GuestRoutes","Register","Login","App","Landing","Auth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4429601.chunk.js","sourcesContent":["import { ThunkAction } from \"redux-thunk\";\r\nimport { Action } from \"redux\";\r\nimport { Alerts, RootState } from \"./reducers\";\r\n\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\n\r\nexport const LOAD_USER = \"LOAD_USER\";\r\nexport const RESET_AUTH = \"RESET_AUTH\"\r\n\r\nexport const SET_PROJECTS = \"SET_PROJECTS\";\r\nexport const SET_PROJECT = \"SET_PROJECT\";\r\nexport const PROJECT_ERROR = \"PROJECT_ERROR\";\r\nexport const RESET_PROJECT = \"RESET_PROJECT\";\r\n\r\nexport const SET_PROJECT_TASKS = \"SET_PROJECT_TASKS\";\r\nexport const SET_PROJECT_TASK = \"SET_PROJECT_TASK\";\r\nexport const PROJECT_TASK_ERROR = \"PROJECT_TASK_ERROR\";\r\nexport const RESET_PROJECT_TASK = \"RESET_PROJECT_TASK\";\r\n\r\nexport type AppThunk = ThunkAction<void, RootState, object, Action<string>>;\r\n\r\nexport interface AlertActionTypes {\r\n    type: typeof SET_ALERT | typeof REMOVE_ALERT,\r\n    payload: Alerts\r\n};\r\n\r\nexport interface AuthActionTypes {\r\n    type: typeof LOAD_USER | typeof RESET_AUTH,\r\n    payload: object\r\n};\r\n\r\nexport interface ProjectActionTypes {\r\n    type: typeof SET_PROJECTS | typeof SET_PROJECT | typeof PROJECT_ERROR | typeof RESET_PROJECT\r\n    payload: object[]\r\n};\r\n\r\nexport interface ProjectTaskActionTypes {\r\n    type: typeof SET_PROJECT_TASKS | typeof SET_PROJECT_TASK | typeof PROJECT_TASK_ERROR | typeof RESET_PROJECT_TASK\r\n    payload: object[]\r\n};\r\n","import * as constants from \"../types/actions\";\r\nimport { Alerts } from \"../types/reducers\";\r\n\r\nconst initialState: Alerts[] = [];\r\n\r\nexport default function(state = initialState, action : constants.AlertActionTypes): Alerts[] {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case constants.SET_ALERT:\r\n            return [...state, payload];\r\n        case constants.REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload.id);\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import * as constants from \"../types/actions\";\r\nimport { Auth } from \"../types/reducers\";\r\n\r\nconst initialState : Auth = {\r\n    isAuthenticated: false,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action: constants.AuthActionTypes) : Auth {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case constants.LOAD_USER:\r\n            return {\r\n                isAuthenticated: true,\r\n                user: payload\r\n            };\r\n        case constants.RESET_AUTH:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import * as constants from \"../types/actions\";\r\nimport { Project } from \"../types/reducers\";\r\n\r\nconst initialState : Project = {\r\n    projects: [],\r\n    project: null,\r\n    loadedProjects: false,\r\n    loadedProject: false\r\n};\r\n\r\nexport default function(state = initialState, action: constants.ProjectActionTypes) : Project {\r\n    const { type, payload } = action;\r\n    switch(type) {\r\n        case constants.SET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: payload,\r\n                loadedProjects: true\r\n            };\r\n        case constants.SET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: payload,\r\n                loadedProject: true\r\n            };\r\n        case constants.PROJECT_ERROR:\r\n            return {\r\n                ...state,\r\n                project: null,\r\n                loadedProject: true\r\n            };\r\n        case constants.RESET_PROJECT:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import * as constants from \"../types/actions\"\r\nimport { ProjectTask } from \"../types/reducers\";\r\n\r\nconst initialState : ProjectTask = {\r\n    projectTasks: [],\r\n    projectTask: null,\r\n    loadedProjectTasks: false,\r\n    loadedProjectTask: false\r\n};\r\n\r\nexport default function(state = initialState, action: constants.ProjectTaskActionTypes) : ProjectTask {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case constants.SET_PROJECT_TASKS:\r\n            return {\r\n                ...state,\r\n                projectTasks: payload,\r\n                loadedProjectTasks: true\r\n            };\r\n        case constants.SET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                projectTask: payload,\r\n                loadedProjectTask: true\r\n            };\r\n        case constants.PROJECT_TASK_ERROR:\r\n            return {\r\n                ...state,\r\n                projectTask: null,\r\n                loadedProjectTask: true\r\n            };\r\n        case constants.RESET_PROJECT_TASK:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { combineReducers } from \"redux\"\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport project from \"./project\";\r\nimport projectTask from \"./projectTask\";\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    project,\r\n    projectTask\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState : object = {};\r\n\r\nconst store : any = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import * as constants from \"../types/actions\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const setAlert = (msg : string, alertType : string, timeout : number = 2000) : constants.AppThunk => dispatch => {\r\n    const id = v4();\r\n    dispatch({\r\n        type: constants.SET_ALERT,\r\n        payload: {msg, alertType, id}\r\n    });\r\n\r\n    setTimeout(() => {dispatch({\r\n                            type: constants.REMOVE_ALERT, \r\n                            payload: {msg, alertType, id}})}, timeout);\r\n}\r\n","import { setAlert } from \"./alert\";\r\nimport { logout } from \"./auth\";\r\nimport * as constants from \"../types/actions\";\r\n\r\nconst errors = (err : any) : constants.AppThunk => async dispatch => {\r\n    if (!err.response || !err.response.data || !err.response.data.errors) {\r\n        console.error(err);\r\n        return;\r\n    };\r\n\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors && errors[0].msg === \"Token is not valid\") {\r\n        dispatch(setAlert(\"Session expired\", \"danger\"));\r\n        dispatch(logout());\r\n        return;\r\n    };\r\n\r\n    errors.forEach((error : any) => dispatch(setAlert(error.msg, \"danger\")));\r\n};\r\n\r\nexport default errors;\r\n","import axios from \"axios\";\r\nimport * as constants from \"../types/actions\";\r\nimport errors from \"./errors\";\r\nimport { RegisterForm, LoginForm } from \"../types/forms\";\r\n\r\nexport const logout = () : constants.AppThunk => async dispatch => {\r\n    localStorage.removeItem(\"token\");\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n    dispatch({type: constants.RESET_AUTH});\r\n};\r\n\r\nexport const loadUser = () : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(\"/api/users\");\r\n        dispatch({\r\n            type: constants.LOAD_USER,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const register = (formData : RegisterForm) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.post(\"/api/users/register\", formData);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        axios.defaults.headers.common[\"x-auth-token\"] = localStorage.token;\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const login = (formData : LoginForm) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.post(\"/api/users/login\", formData);\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        axios.defaults.headers.common[\"x-auth-token\"] = localStorage.token;\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    logout\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Navbar = ({isAuthenticated, logout} : PropsFromRedux) : JSX.Element => {\r\n    const authLinks = (\r\n        <Fragment>\r\n            <li>\r\n                <Link to=\"/dashboard\">\r\n                    <i className=\"fas fa-columns\"></i>\r\n                    <span className=\"hide-mobile\"> Dashboard</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link onClick={e => logout()} to=\"/\">\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span className=\"hide-mobile\"> Logout</span>\r\n                </Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <li>\r\n\t\t\t\t<Link to=\"/register\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                    <span className=\"hide-mobile\"> Register</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<Link to=\"/login\">\r\n                    <i className=\"fas fa-sign-in-alt\"></i>\r\n                    <span className=\"hide-mobile\"> Login</span>\r\n\t\t\t\t</Link>\r\n\t\t\t</li>\r\n        </Fragment>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar bg-primary\">\r\n            <h2>\r\n                <Link to=\"/\">\r\n                    <i className=\"fas fa-tasks\"></i>\r\n                    <span className=\"hide-mobile\"> Personal Project Management Tool</span>\r\n                </Link>\r\n            </h2>\r\n            <ul>\r\n                {isAuthenticated ? authLinks : guestLinks}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default connector(Navbar);\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    alerts: state.alert\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Alert = ({ alerts } : PropsFromRedux) : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            {alerts.map(alert => (\r\n                <div key={alert.id} className={`alert bg-${alert.alertType}`}>\r\n                    {alert.msg}\r\n                </div>\r\n            ))}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Alert);\r\n","import React from \"react\";\r\n\r\nconst Footer = () : JSX.Element => {\r\n    return (\r\n        <footer className=\"footer hide-mobile\">\r\n            <div className=\"item\">\r\n                <span>Author: Vincent Yang</span>\r\n                <p className=\"footer-links\">\r\n                    <a href=\"https://vincent-yang.com\">Personal Website</a>\r\n                    <span> | </span>\r\n                    <a href=\"https://github.com/Yangv19\">Github</a>\r\n                </p>\r\n            </div>\r\n            <div className=\"item\">    \r\n                <div>\r\n                    <i className=\"fa fa-phone\"></i>\r\n                    <span> 647-636-3461</span>\r\n                </div>\r\n                <div>\r\n                    <i className=\"fa fa-envelope\"></i>\r\n                    <span> v6yang@uwaterloo.ca</span>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Landing = ({ isAuthenticated } : PropsFromRedux) : JSX.Element => {\r\n    const guestLinks = (\r\n        <div className=\"my-1\">\r\n            <Link to=\"/register\" className=\"btn bg-primary\">Sign Up</Link>\r\n            <Link to=\"/login\" className=\"btn bg-light\">Login</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"full\">\r\n                <div className=\"landing\">\r\n                    <Alert/>\r\n                    <h1 className=\"x-large\">\r\n                        Personal Project Management Tool\r\n                    </h1>\r\n                    <p className=\"lead\">\r\n                        Create your account to join active projects or start your own\r\n                    </p>\r\n                    <hr/>\r\n                    {!isAuthenticated && guestLinks}\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Landing);\r\n","import React, { Fragment, useState, useEffect } from \"react\"\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport { History, LocationState } from \"history\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    setAlert,\r\n    register\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>\r\n}\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated, history } : Props) : JSX.Element => {\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(\"/\");\r\n        };\r\n    }, [isAuthenticated, history]);\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name] : e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (password !== password2) {\r\n            setAlert('Password do not match', 'danger', 3000);\r\n        } else {\r\n            register({name, email, password});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large primary\">Sign Up</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    <span className=\"hide-mobile\"> Create Your Account</span>\r\n                </p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Full Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Email Address\" \r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            name=\"password2\"\r\n                            value={password2}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"my-1 btn bg-primary\" value=\"Register\" />\r\n                </form>\r\n                <div>\r\n                    <p>\r\n                        Already have an account?\r\n                    </p>\r\n                    <Link to=\"/login\">Sign In</Link>\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Register);\r\n","import React, { Fragment, useState, useEffect } from \"react\"\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { History, LocationState } from \"history\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst mapDispatch = {\r\n    login\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>\r\n};\r\n\r\nconst Login = ({ login, isAuthenticated, history } : Props) : JSX.Element => {\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            history.push(\"/\");\r\n        };\r\n    }, [isAuthenticated, history]);\r\n    \r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name] : e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        login(formData);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container\">\r\n                <h1 className=\"large primary\">Sign In</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fas fa-user\"></i>\r\n                    <span className=\"hide-mobile\"> Sign Into Your Account</span>\r\n                </p>\r\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Email Address\"\r\n                            name=\"email\" \r\n                            value={email} \r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                        />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"btn bg-primary\" value=\"Login\" />\r\n                </form>\r\n                <div className=\"my-1\">\r\n                    <p>\r\n                        Don\"t have an account?\r\n                    </p>\r\n                    <Link to=\"/register\">Sign Up</Link>\r\n                </div>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Login);\r\n","import axios from \"axios\";\r\nimport * as constants from \"../types/actions\";\r\nimport errors from \"./errors\";\r\nimport { setAlert } from \"./alert\";\r\nimport { ProjectForm } from \"../types/forms\";\r\nimport { History, LocationState } from \"history\";\r\n\r\nexport const getProjects = () : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(\"/api/projects\");\r\n        dispatch({\r\n            type: constants.SET_PROJECTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const createProject = (formData : ProjectForm, history: History<LocationState>) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/projects\", formData);\r\n        dispatch(setAlert(\"Project Created\", \"success\"));\r\n        history.push(\"/dashboard\");\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const deleteProject = (id : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/projects/${id}`);\r\n        dispatch(setAlert(\"Post Removed\", \"success\"));\r\n        dispatch(getProjects());\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const updateProject = (id : string, formData : ProjectForm, history: History<LocationState>) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/projects/${id}`, formData);\r\n        dispatch(setAlert(\"Project Updated\", \"success\"));\r\n        history.push(\"/dashboard\");\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const getProject = (id : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res : any = await axios.get(`/api/projects/${id}`);\r\n        dispatch({\r\n            type: constants.SET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n        dispatch({\r\n            type: constants.PROJECT_ERROR\r\n        });\r\n    };\r\n};\r\n\r\nexport const resetProject = () : constants.AppThunk => dispatch => {\r\n    dispatch({\r\n        type: constants.RESET_PROJECT\r\n    });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/spinner.f30ae0f0.gif\";","import React from \"react\";\r\nimport spinner from \"../../img/spinner.gif\";\r\n\r\nexport default () : JSX.Element => (\r\n    <img\r\n        src={spinner}\r\n        alt=\"\"\r\n        className=\"spinner\"\r\n    />\r\n);\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteProject } from '../../actions/project';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapDispatch = {\r\n    deleteProject\r\n};\r\n\r\nconst connector = connect(null, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    project: any\r\n};\r\n\r\nconst ProjectItem = ({ deleteProject, project } : Props) : JSX.Element => {\r\n    return (\r\n        <div className=\"project\">\r\n            <div className=\"project-1\">\r\n                <div>\r\n                    <h4>Deadline:</h4>\r\n                    <h4>{project.end.slice(0, 10)}</h4>\r\n                </div>\r\n                <div>\r\n                    <h4 className=\"lead\">\r\n                        {project.name}\r\n                    </h4>\r\n                    <h4 className=\"gray\">\r\n                        {project.description}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Link to={`/taskboard/${project.id}`} className=\"project-button light\">\r\n                    <i className=\"fa fa-flag-checkered\"></i>\r\n                    <span className=\"hide-mobile\">\r\n                        Project Board\r\n                    </span>\r\n                </Link>\r\n                <Link to={`/update-project/${project.id}`} className=\"project-button success\">\r\n                    <i className=\"fa fa-edit\"></i>\r\n                    <span className=\"hide-mobile\">\r\n                        Update Project Info\r\n                    </span>\r\n                </Link>\r\n                <div onClick={e => deleteProject(project.id)} className=\"project-button danger\">\r\n                    <i className=\"fa fa-minus-circle\"></i>\r\n                    <span className=\"hide-mobile\">\r\n                        Delete Project\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connector(ProjectItem);\r\n","import React, { useEffect } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getProjects } from \"../../actions/project\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport ProjectItem from './ProjectItem';\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    project: state.project\r\n});\r\n\r\nconst mapDispatch = {\r\n    getProjects\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Dashboard = ({ getProjects, project } : PropsFromRedux) : JSX.Element => {\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, [getProjects]);\r\n\r\n    return (!project.loadedProjects ? <Spinner/> :\r\n        <section className=\"container\">\r\n\t\t\t<h1 className=\"x-large center\">\r\n\t\t\t\tProjects\r\n\t\t\t</h1>\r\n\t\t\t<Link to=\"/create-project\" className=\"btn bg-light dark\">\r\n\t\t\t\t<i className=\"fas fa-plus-circle\"> Create A Project</i>\r\n\t\t\t</Link>\r\n\t\t\t<hr className=\"my-1\"/>\r\n\t\t\t{project.projects.map(project => (\r\n                    <ProjectItem key={project.id} project={project} />\r\n                ))}\r\n\t\t</section>\r\n    );\r\n};\r\n\r\nexport default connector(Dashboard);\r\n","import React, { useState } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { createProject } from \"../../actions/project\"\r\nimport { History, LocationState } from \"history\";\r\n\r\nconst mapDispatch = {\r\n    createProject\r\n};\r\n\r\nconst connector = connect(null, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>\r\n};\r\n\r\nconst CreateProject = ({ createProject, history } : Props) : JSX.Element => {\r\n    const [formData, setFormData] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        start: \"\",\r\n        end: \"\"\r\n    });\r\n\r\n    const { name, description, start, end } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name] : e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        createProject(formData, history);\r\n    };\r\n\r\n    return (\r\n        <section className=\"container\">\r\n\t\t\t<h1 className=\"large primary\">Create Project Form</h1>\r\n\t\t\t<p className=\"lead\">\r\n\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t\t<span className=\"hide-mobile\"> Create A New Project</span>\r\n\t\t\t</p>\r\n\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Name\" \r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Description\"\r\n                        name=\"description\"\r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<span>Start Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        name=\"start\"\r\n                        value={start}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span>End Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        name=\"end\"\r\n                        value={end}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" className=\"my-1 btn bg-primary\" />\r\n\t\t\t</form>\r\n\t\t</section>\r\n    );\r\n};\r\n\r\nexport default connector(CreateProject);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getProject, updateProject, resetProject } from \"../../actions/project\";\r\nimport { History, LocationState } from \"history\";\r\nimport { match } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    project: state.project\r\n});\r\n\r\nconst mapDispatch = {\r\n    getProject,\r\n    updateProject,\r\n    resetProject\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Identifiable {\r\n    projectId: string\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>,\r\n    match: match<Identifiable>,\r\n    project: any\r\n};\r\n\r\nconst UpdateProject = ( { getProject, updateProject, resetProject, project, match, history } : Props) : JSX.Element => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        description: '',\r\n        start: '',\r\n        end: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        getProject(match.params.projectId);\r\n    }, [getProject, match]);\r\n\r\n    useEffect(() => {\r\n        if (project.loadedProject && project.project === null) {\r\n            resetProject();\r\n            history.push(\"/NotFound\");\r\n        };\r\n    }, [project, history, resetProject]);\r\n\r\n    useEffect(() => {\r\n        if (project.project !== null) {\r\n            setFormData({\r\n                name: project.project.name,\r\n                description: project.project.description,\r\n                start: project.project.start.slice(0, 10),\r\n                end: project.project.end.slice(0, 10)\r\n            });\r\n        };\r\n    }, [project]);\r\n\r\n    const { name, description, start, end } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement>) => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        updateProject(match.params.projectId, formData, history);\r\n    };\r\n\r\n    return (\r\n        <section className=\"container\">\r\n\t\t\t<h1 className=\"large primary\">Update Project Form</h1>\r\n\t\t\t<p className=\"lead\">\r\n\t\t\t\t<i className=\"fas fa-pen\"></i>\r\n\t\t\t\t<span className=\"hide-mobile\"> Update An Existing Project</span>\r\n\t\t\t</p>\r\n\t\t\t<form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Description\"\r\n                        name=\"description\"\r\n                        value={description}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<span>Start Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        name=\"start\"\r\n                        value={start}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span>End Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        name=\"end\"\r\n                        value={end}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" className=\"my-1 btn bg-primary\" />\r\n\t\t\t</form>\r\n\t\t</section>\r\n    );\r\n};\r\n\r\nexport default connector(UpdateProject);\r\n","import axios from \"axios\";\r\nimport * as constants from \"../types/actions\";\r\nimport errors from \"./errors\";\r\nimport { setAlert } from \"./alert\";\r\nimport { ProjectTaskForm } from \"../types/forms\";\r\nimport { History, LocationState } from \"history\";\r\n\r\nexport const getProjectTasks = (id : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/projectTasks/${id}`);\r\n        dispatch({\r\n            type: constants.SET_PROJECT_TASKS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const createProjectTask = (id : string, formData : ProjectTaskForm, history: History<LocationState>) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/projectTasks/${id}`, formData);\r\n        dispatch(setAlert(\"Project Task Created\", \"success\"));\r\n        history.push(`/taskboard/${id}`);\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const deleteProjectTask = (projectId : string, projectTaskId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/projectTasks/${projectId}/${projectTaskId}`);\r\n        dispatch(setAlert(\"Project Removed\", \"success\"));\r\n        dispatch(getProjectTasks(projectId));\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const updateProjectTask = (projectId : string, projectTaskId : string, formData : ProjectTaskForm, history: History<LocationState>): constants.AppThunk => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/projectTasks/${projectId}/${projectTaskId}`, formData);\r\n        dispatch(setAlert(\"Project Updated\", \"success\"));\r\n        history.push(`/taskboard/${projectId}`);\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n    };\r\n};\r\n\r\nexport const getProjectTask = (projectId : string, projectTaskId : string) : constants.AppThunk => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/projectTasks/${projectId}/${projectTaskId}`);\r\n        dispatch({\r\n            type: constants.SET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch(errors(err));\r\n        dispatch({\r\n            type: constants.PROJECT_ERROR\r\n        });\r\n    };\r\n};\r\n\r\nexport const resetProjectTask = () : constants.AppThunk => dispatch => {\r\n    dispatch({\r\n        type: constants.RESET_PROJECT_TASK\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../actions/projectTask\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst mapDispatch = {\r\n    deleteProjectTask\r\n};\r\n\r\nconst connector = connect(null, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Props extends PropsFromRedux {\r\n    projectTask: any,\r\n    projectId: string\r\n};\r\n\r\nconst ProjectTask = ({projectId, projectTask, deleteProjectTask} : Props) : JSX.Element => {\r\n    let priorityClass : string = \"\";\r\n\r\n    if (projectTask.priority === \"HIGH\") {\r\n        priorityClass = \"bg-danger\";\r\n    };\r\n  \r\n    if (projectTask.priority === \"MEDIUM\") {\r\n        priorityClass = \"bg-yellow\";\r\n    };\r\n\r\n    if (projectTask.priority === \"LOW\") {\r\n        priorityClass = \"bg-light-blue\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gray project-task-item\">\r\n            <h4 className={priorityClass}>\r\n                Priority: {projectTask.priority}\r\n            </h4>\r\n            <h4>{projectTask.summary}</h4>\r\n            <h4>{projectTask.criteria}</h4>\r\n            <h4>Deadline: {projectTask.due.slice(0, 10)}</h4>\r\n            <Link to={`/update-project-task/${projectId}/${projectTask.id}`} className=\"btn bg-primary\">\r\n                Update\r\n            </Link>\r\n            <div className=\"btn bg-danger\" onClick={e => deleteProjectTask(projectId, projectTask.id)}>\r\n                Delete\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connector(ProjectTask);\r\n","import React from \"react\";\r\nimport ProjectTask from \"./ProjectTask\";\r\n\r\ninterface Props {\r\n    projectTasks: any[],\r\n    projectId: string\r\n};\r\n\r\nconst Backlog = ({ projectTasks, projectId } : Props) : JSX.Element => {\r\n    const tasks = projectTasks.map(projectTask => (\r\n        <ProjectTask key={projectTask.id} projectTask={projectTask} projectId={projectId}/>\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n        if (tasks[i].props.projectTask.status === \"TO DO\") {\r\n        \ttodoItems.push(tasks[i]);\r\n        }\r\n  \r\n        if (tasks[i].props.projectTask.status === \"IN PROGRESS\") {\r\n        \tinProgressItems.push(tasks[i]);\r\n        }\r\n  \r\n        if (tasks[i].props.projectTask.status === \"DONE\") {\r\n        \tdoneItems.push(tasks[i]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"project-task\">\r\n        \t<div>\r\n        \t\t<div className=\"project-task-category bg-dark\">\r\n            \t\t<h3 className=\"white\">\r\n            \t\t\tTODO\r\n            \t\t</h3>\r\n            \t</div>\r\n            \t{todoItems}\r\n        \t</div>\r\n        \t<div>\r\n        \t\t<div className=\"project-task-category bg-primary\">\r\n            \t\t<h3 className=\"white\">\r\n            \t\t\tIN-PROGRESS\r\n            \t\t</h3>\r\n            \t</div>\r\n            \t{inProgressItems}\r\n        \t</div>\r\n        \t<div>\r\n    \t\t\t<div className=\"project-task-category bg-success\">\r\n\t\t\t\t\t<h3 className=\"white\">\r\n\t\t\t\t\t\tDONE\r\n\t\t\t\t\t</h3>\r\n            \t</div>\r\n            \t{doneItems}        \r\n        \t</div>\r\n\t\t</div>\r\n    );\r\n};\r\n\r\nexport default Backlog;\r\n","import React, { useEffect } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getProject, resetProject } from \"../../actions/project\";\r\nimport { getProjectTasks } from \"../../actions/projectTask\";\r\nimport { History, LocationState } from \"history\";\r\nimport { Link, match } from \"react-router-dom\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport Backlog from \"./Backlog\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    project: state.project,\r\n    projectTask : state.projectTask\r\n});\r\n\r\nconst mapDispatch = {\r\n    getProject,\r\n    resetProject,\r\n    getProjectTasks\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Identifiable {\r\n    projectId: string\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>,\r\n    match: match<Identifiable>\r\n};\r\n\r\nconst Taskboard = ({ getProject, resetProject, getProjectTasks, match, history, project, projectTask } : Props) : JSX.Element => {\r\n    useEffect(() => {\r\n        getProject(match.params.projectId);\r\n    }, [getProject, match]);\r\n\r\n    useEffect(() => {\r\n        if (project.loadedProject && project.project === null) {\r\n            resetProject();\r\n            history.push(\"/NotFound\");\r\n        };\r\n    }, [project, history, resetProject]);\r\n    \r\n    useEffect(() => {\r\n        getProjectTasks(match.params.projectId);\r\n    }, [getProjectTasks, match]);\r\n\r\n    return (!projectTask.loadedProjectTasks ? <Spinner/> :\r\n        <section className=\"container\">\r\n\t\t\t<Link to={`/create-project-task/${match.params.projectId}`} className=\"btn bg-light dark\">\r\n\t\t\t\t<i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n\t\t\t</Link>\r\n\t\t\t<hr className=\"my-1\"/>\r\n            <Backlog projectTasks={projectTask.projectTasks} projectId={match.params.projectId}/>\r\n\t\t</section>\r\n    );\r\n};\r\n\r\nexport default connector(Taskboard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getProject, resetProject } from \"../../actions/project\";\r\nimport { createProjectTask } from \"../../actions/projectTask\";\r\nimport { History, LocationState } from \"history\";\r\nimport { match } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    project: state.project\r\n});\r\n\r\nconst mapDispatch = {\r\n    getProject,\r\n    resetProject,\r\n    createProjectTask\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Identifiable {\r\n    projectId: string\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>,\r\n    match: match<Identifiable>\r\n};\r\n\r\nconst CreateProjectTask = ({ getProject, resetProject, createProjectTask, project, match, history } : Props) : JSX.Element => {\r\n    useEffect(() => {\r\n        getProject(match.params.projectId);\r\n    }, [getProject, match]);\r\n\r\n    useEffect(() => {\r\n        if (project.loadedProject && project.project === null) {\r\n            resetProject();\r\n            history.push(\"/NotFound\");\r\n        };\r\n    }, [project, history, resetProject]);\r\n\r\n    const [formData, setFormData] = useState({\r\n        summary: \"\",\r\n        criteria: \"\",\r\n        priority: \"\",\r\n        status: \"\",\r\n        due: \"\"\r\n    });\r\n\r\n    const { summary, criteria, priority, status, due } = formData;\r\n    \r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLSelectElement>) => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        createProjectTask(match.params.projectId, formData, history);\r\n    };\r\n\r\n    return (\r\n        <section className=\"container\">\r\n\t\t\t<h1 className=\"large primary my-1\">Create Project Task Form</h1>\r\n\t\t\t<p className=\"lead\">\r\n\t\t\t\t<i className=\"fas fa-plus\"></i>\r\n\t\t\t\t<span className=\"hide-mobile\"> Create A New Project Task</span>\r\n\t\t\t</p>\r\n\t\t\t<form onSubmit={e => onSubmit(e)} className=\"form\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Task summary\" \r\n                        name=\"summary\"\r\n                        value={summary}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<textarea\r\n                        placeholder=\"Acceptance Criteria\"\r\n                        cols={30}\r\n                        rows={5}\r\n                        name=\"criteria\"\r\n                        value={criteria}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<span>Due Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        name=\"due\"\r\n                        value={due}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                    <select \r\n                        name=\"priority\"\r\n                        value={priority}\r\n                        onChange={e => onChange(e)}>\r\n                        <option value=\"\">Select Priority</option>\r\n                        <option value=\"HIGH\">HIGH</option>\r\n                        <option value=\"MEDIUM\">MEDIUM</option>\r\n                        <option value=\"LOW\">LOW</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                    <select \r\n                        name=\"status\"\r\n                        value={status}\r\n                        onChange={e => onChange(e)}>\r\n\t\t\t\t\t\t<option value=\"\">Select Status</option>\r\n\t\t\t\t\t\t<option value=\"TO DO\">TO DO</option>\r\n\t\t\t\t\t\t<option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n\t\t\t\t\t\t<option value=\"DONE\">DONE</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" className=\"my-1 btn bg-primary\" />\r\n\t\t\t</form>\r\n\t\t</section>\r\n    );\r\n};\r\n\r\nexport default connector(CreateProjectTask);\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { getProject, resetProject } from \"../../actions/project\";\r\nimport { getProjectTask, resetProjectTask, updateProjectTask } from \"../../actions/projectTask\";\r\nimport { History, LocationState } from \"history\";\r\nimport { match } from \"react-router-dom\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    project: state.project,\r\n    projectTask: state.projectTask\r\n});\r\n\r\nconst mapDispatch = {\r\n    getProject,\r\n    resetProject,\r\n    getProjectTask,\r\n    resetProjectTask,\r\n    updateProjectTask\r\n};\r\n\r\nconst connector = connect(mapStateToProps, mapDispatch);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ninterface Identifiable {\r\n    projectId: string,\r\n    projectTaskId: string\r\n};\r\n\r\ninterface Props extends PropsFromRedux {\r\n    history: History<LocationState>,\r\n    match: match<Identifiable>\r\n};\r\n\r\nconst UpdateProjectTask = ({ getProject, resetProject, getProjectTask, resetProjectTask, updateProjectTask,\r\n                             match, history, project, projectTask } : Props) : JSX.Element  => {\r\n    const [formData, setFormData] = useState({\r\n        summary: \"\",\r\n        criteria: \"\",\r\n        due: \"\",\r\n        priority: \"\",\r\n        status: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        getProject(match.params.projectId);\r\n    }, [getProject, match]);\r\n\r\n    useEffect(() => {\r\n        if (project.loadedProject && project.project === null) {\r\n            resetProject();\r\n            history.push(\"/NotFound\");\r\n        };\r\n    }, [project, history, resetProject]);\r\n\r\n    useEffect(() => {\r\n        getProjectTask(match.params.projectId, match.params.projectTaskId);\r\n    }, [getProjectTask, match]);\r\n\r\n    useEffect(() => {\r\n        if (projectTask.loadedProjectTask && projectTask.projectTask === null) {\r\n            resetProjectTask();\r\n            history.push(\"/NotFound\");\r\n        };\r\n    }, [projectTask, history, resetProjectTask]);\r\n\r\n    useEffect(() => {\r\n        if (projectTask.projectTask !== null) {\r\n            setFormData({\r\n                summary: projectTask.projectTask.summary,\r\n                criteria: projectTask.projectTask.criteria,\r\n                due: projectTask.projectTask.due.slice(0, 10),\r\n                priority: projectTask.projectTask.priority,\r\n                status: projectTask.projectTask.status,\r\n            });\r\n        };\r\n    }, [projectTask]);\r\n\r\n    const { summary, criteria, priority, status, due } = formData;\r\n\r\n    const onChange = (e : React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement> | React.ChangeEvent<HTMLSelectElement>) => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = (e : React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        updateProjectTask(match.params.projectId, match.params.projectTaskId, formData, history);\r\n    };\r\n\r\n    return (\r\n        <section className=\"container\">\r\n\t\t\t<h1 className=\"large primary my-1\">Update Project Task Form</h1>\r\n\t\t\t<p className=\"lead\">\r\n\t\t\t\t<i className=\"fas fa-pen\"></i>\r\n\t\t\t\t<span className=\"hide-mobile\"> Update This Project Task</span>\r\n\t\t\t</p>\r\n\t\t\t<form onSubmit={e => onSubmit(e)} className=\"form\">\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Task summary\" \r\n                        name=\"summary\"\r\n                        value={summary}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<textarea \r\n                        placeholder=\"Acceptance Criteria\"\r\n                        cols={30}\r\n                        rows={5}\r\n                        name=\"criteria\"\r\n                        value={criteria}\r\n                        onChange={e => onChange(e)}>\r\n                    </textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<span>Due Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        name=\"due\"\r\n                        value={due}\r\n                        onChange={e => onChange(e)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                    <select \r\n                        name=\"priority\"\r\n                        value={priority}\r\n                        onChange={e => onChange(e)}>\r\n\t\t\t\t\t\t<option value=\"\">Select Priority</option>\r\n\t\t\t\t\t\t<option value=\"HIGH\">HIGH</option>\r\n\t\t\t\t\t\t<option value=\"MEDIUM\">MEDIUM</option>\r\n\t\t\t\t\t\t<option value=\"LOW\">LOW</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                    <select \r\n                        name=\"status\"\r\n                        value={status}\r\n                        onChange={e => onChange(e)}>\r\n\t\t\t\t\t\t<option value=\"\">Select Status</option>\r\n\t\t\t\t\t\t<option value=\"TO DO\">TO DO</option>\r\n\t\t\t\t\t\t<option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n\t\t\t\t\t\t<option value=\"DONE\">DONE</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" className=\"my-1 btn bg-primary\" />\r\n\t\t\t</form>\r\n\t\t</section>\r\n    );\r\n};\r\n\r\nexport default connector(UpdateProjectTask);\r\n","import React, { Fragment } from \"react\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst NotFound = () : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container full\">\r\n                <h1 className=\"large text-primary\">\r\n                    <i className=\"fas fa-exclamation-triangle\"></i>\r\n                    <span> 404 Page Not Found</span>\r\n                </h1>\r\n                <p className=\"lead\">Sorry this page does not exist</p>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"../dashboard/Dashboard\";\r\nimport CreateProject from \"../dashboard/CreateProject\";\r\nimport UpdateProject from \"../dashboard/UpdateProject\";\r\nimport Taskboard from \"../taskboard/Taskboard\";\r\nimport CreateProjectTask from \"../taskboard/CreateProjectTask\";\r\nimport UpdateProjectTask from \"../taskboard/UpdateProjectTask\";\r\nimport NotFound from \"../basic/NotFound\";\r\n\r\nconst AuthRoutes = () : JSX.Element => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/dashboard\" component={Dashboard}/>\r\n            <Route exact path=\"/create-project\" component={CreateProject}/>\r\n            <Route exact path=\"/update-project/:projectId\" component={UpdateProject}/>\r\n            <Route exact path=\"/taskboard/:projectId\" component={Taskboard}/>\r\n            <Route exact path=\"/create-project-task/:projectId\" component={CreateProjectTask}/>\r\n            <Route exact path=\"/update-project-task/:projectId/:projectTaskId\" component={UpdateProjectTask}/>\r\n            <Route exact path =\"/*\" component={NotFound}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AuthRoutes;\r\n","import React, { Fragment } from \"react\";\r\nimport Footer from \"../layout/Footer\";\r\n\r\nconst NotAuthorized = () : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <section className=\"container full\">\r\n                <h1 className=\"large text-primary\">\r\n                    <i className=\"fas fa-skull-crossbones\"></i>\r\n                    <span> 401 Not Authorized</span>\r\n                </h1>\r\n                <p className=\"lead\">Sorry you are not authorized to view this page</p>\r\n            </section>\r\n            <Footer/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default NotAuthorized;\r\n","import React from \"react\"\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotAuthorized from \"../basic/NotAuthorized\";\r\nimport NotFound from \"../basic/NotFound\";\r\n\r\nconst GuestRoutes = () : JSX.Element => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/dashboard\" component={NotAuthorized}/>\r\n            <Route exact path=\"/create-project\" component={NotAuthorized}/>\r\n            <Route exact path=\"/update-project/:projectId\" component={NotAuthorized}/>\r\n            <Route exact path=\"/taskboard/:projectId\" component={NotAuthorized}/>\r\n            <Route exact path=\"/create-project-task/:projectId\" component={NotAuthorized}/>\r\n            <Route exact path=\"/update-project-task/:projectId/:projectTaskId\" component={NotAuthorized}/>\r\n            <Route exact path =\"/*\" component={NotFound}></Route>\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default GuestRoutes;\r\n","import React, { Fragment } from \"react\";\r\nimport { RootState } from \"../../types/reducers\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Register from \"../auth/Register\";\r\nimport Login from \"../auth/Login\";\r\nimport AuthRoutes from \"./AuthRoutes\";\r\nimport GuestRoutes from \"./GuestRoutes\";\r\n\r\nconst mapStateToProps = (state : RootState) => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\nconst Auth = ({ isAuthenticated } : PropsFromRedux) : JSX.Element => {\r\n    return (\r\n        <Fragment>\r\n            <Alert/>\r\n            <Switch>\r\n                <Route exact path=\"/register\" component={Register}/>\r\n                <Route exact path=\"/login\" component={Login}/>\r\n                {isAuthenticated ? \r\n                    <AuthRoutes/> : <GuestRoutes/>\r\n                }\r\n            </Switch>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default connector(Auth);\r\n","import \"./App.css\";\nimport React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/basic/Landing\";\nimport Auth from \"./components/routing/Auth\";\n\nconst App = () : JSX.Element => {\n\tuseEffect(() => {\n\t\tif (localStorage.token) {\n\t\t\taxios.defaults.headers.common[\"x-auth-token\"] = localStorage.token;\n\t\t\tstore.dispatch(loadUser());\n\t\t};\n\t});\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Navbar/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landing}/>\n\t\t\t\t\t<Route exact path=\"/*\" component={Auth}/>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}