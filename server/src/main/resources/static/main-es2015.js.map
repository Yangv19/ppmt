{"version":3,"sources":["./src/app/components/basic/landing/landing.component.html","./src/app/components/basic/landing/landing.component.ts","./src/app/services/alert.service.ts","./src/app/components/dashboard/update-project/update-project.component.ts","./src/app/components/dashboard/update-project/update-project.component.html","./src/app/services/error.service.ts","./src/environments/environment.ts","./src/app/components/basic/not-found/not-found.component.ts","./src/app/components/basic/not-found/not-found.component.html","./src/app/components/auth/signup/signup.component.ts","./src/app/components/auth/signup/signup.component.html","./src/app/components/taskboard/taskboard.component.html","./src/app/components/taskboard/taskboard.component.ts","./src/app/components/layout/footer/footer.component.ts","./src/app/components/layout/footer/footer.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/basic/not-authorized/not-authorized.component.ts","./src/app/components/basic/not-authorized/not-authorized.component.html","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/taskboard/update-project-task/update-project-task.component.ts","./src/app/components/taskboard/update-project-task/update-project-task.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/routing/app-routing.module.ts","./src/app/app.module.ts","./src/app/services/project.service.ts","./src/app/components/layout/spinner/spinner.component.ts","./src/app/components/layout/spinner/spinner.component.html","./src/app/components/layout/alert/alert.component.html","./src/app/components/layout/alert/alert.component.ts","./src/app/services/project-task.service.ts","./src/app/components/dashboard/create-project/create-project.component.html","./src/app/components/dashboard/create-project/create-project.component.ts","./src/app/services/header.service.ts","./src/app/components/taskboard/project-task-item/project-task-item.component.ts","./src/app/components/taskboard/project-task-item/project-task-item.component.html","./src/app/services/auth.service.ts","./src/app/components/dashboard/project-item/project-item.component.ts","./src/app/components/dashboard/project-item/project-item.component.html","./src/app/components/taskboard/create-project-task/create-project-task.component.html","./src/app/components/taskboard/create-project-task/create-project-task.component.ts","./src/main.ts","./src/app/components/layout/navbar/navbar.component.html","./src/app/components/layout/navbar/navbar.component.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<section class=\"full\">\r\n    <div class=\"landing\">\r\n        <Alert></Alert>\r\n        <h1 class=\"x-large\">\r\n            Personal Project Management Tool\r\n        </h1>\r\n        <p class=\"lead\">\r\n            Create your account to join active projects or start your own now\r\n        </p>\r\n        <hr/>\r\n        <div class=\"my-1\" *ngIf=\"!isAuthenticated\">\r\n            <a class=\"btn bg-primary\" routerLink=\"/register\">Sign up</a>\r\n            <a class=\"btn bg-light\" routerLink=\"login\">Login</a>\r\n        </div>\r\n    </div>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"../../../services/auth.service\"\r\nimport { Auth } from \"../../../types/states\"\r\n\r\n@Component({\r\n    selector: \"Landing\",\r\n    templateUrl: \"./landing.component.html\"\r\n})\r\nexport class LandingComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Alert } from \"../types/states\"\r\nimport { Subject } from \"rxjs\";\r\nimport { v4 } from \"uuid\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AlertService {\r\n    private alertStateSubject = new Subject<Alert[]>();\r\n    private initialAlertState: Alert[] = []\r\n    private currentAlertState: Alert[] = [...this.initialAlertState];\r\n\r\n    getCurrentAlertState() {\r\n        return this.currentAlertState;\r\n    }\r\n\r\n    getAlertStateSubject() {\r\n        return this.alertStateSubject.asObservable();\r\n    }\r\n\r\n    removeAlert(id: string) {\r\n        this.currentAlertState = this.currentAlertState.filter(alert => alert.id !== id);\r\n        this.alertStateSubject.next(this.currentAlertState);\r\n    }\r\n\r\n    setAlert(msg: string, alertType: string, timeout : number = 2000) {\r\n        let newAlert : Alert = {\r\n            msg,\r\n            alertType,\r\n            id: v4()\r\n        }\r\n        this.currentAlertState = [...this.currentAlertState, newAlert]\r\n        this.alertStateSubject.next(this.currentAlertState);\r\n        setTimeout(() => {\r\n            this.removeAlert(newAlert.id);\r\n        }, timeout);\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth } from \"src/app/types/states\";\r\nimport { Project } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./update-project.component.html\"\r\n})\r\nexport class UpdateProjectComponent {\r\n    isAuthenticated : boolean;\r\n    projectState: Project;\r\n    private authStateSub: Subscription;\r\n    private projectStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n    form: FormGroup;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService, \r\n                private route: ActivatedRoute, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.form = new FormGroup({\r\n            name: new FormControl(null),\r\n            description: new FormControl(null),\r\n            start: new FormControl(null),\r\n            end: new FormControl(null)\r\n        });\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated;\r\n        });\r\n        this.projectState = this.projectService.getCurrentProjectState();\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState: Project) => {\r\n            this.projectState = projectState;\r\n            if (this.projectState.loadedProject && this.projectState.project === null) {\r\n                this.projectService.resetState();\r\n                this.router.navigate([\"/NotFound\"]);\r\n            } else {\r\n                this.form.setValue({\r\n                    name: projectState.project.name,\r\n                    description: projectState.project.description,\r\n                    start: projectState.project.begin,\r\n                    end: projectState.project.end\r\n                });\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectService.getProject(params[\"id\"]);\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.projectService.updateProject(this.projectState.project.id, this.form.value.name, this.form.value.description, \r\n                                          this.form.value.start, this.form.value.end)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary\">Update Project Form</h1>\r\n        <p class=\"lead\">\r\n            <i class=\"fas fa-pen\"></i>\r\n            <span class=\"hide-mobile\"> Update An Existing Project</span>\r\n        </p>\r\n        <form [formGroup]=\"form\" class=\"form\" (submit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Name\"\r\n                    formControlName=\"name\"\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Description\"\r\n                    formControlName=\"description\"\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <span>Start Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"start\"\r\n                    formControlName=\"start\"\r\n                />\r\n                <span>End Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"end\"\r\n                    formControlName=\"end\"\r\n                />\r\n            </div>\r\n            <input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n        </form>\r\n    </section>\r\n</div>\r\n","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { EMPTY, throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AlertService } from \"./alert.service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    \r\n    constructor(private alertService: AlertService, private authService: AuthService) {}\r\n    \r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        return next.handle(req).pipe(\r\n            catchError((error : HttpErrorResponse) => {\r\n                if (error.error.errors[0].msg === \"Invalid token, authorization denied\") {\r\n                    this.alertService.setAlert(\"Session expire\", \"danger\");\r\n                    this.authService.logout();\r\n                    return EMPTY;\r\n                } else if (error.error.errors[0].msg === \"Project Not Found\" || error.error.errors[0].msg === \"Project Task Not Found\") {\r\n                    error.error.errors.forEach(error => this.alertService.setAlert(error.msg, \"danger\"))\r\n                    return throwError(error);\r\n                } else {\r\n                    error.error.errors.forEach(error => this.alertService.setAlert(error.msg, \"danger\"))\r\n                    return EMPTY;\r\n                }\r\n            })\r\n        )\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  proxy: \"http://localhost:4000\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    templateUrl: \"./not-found.component.html\"\r\n})\r\nexport class NotFoundComponent {}\r\n","<Alert></Alert>\r\n<section class=\"container full\">\r\n    <h1 class=\"large text-primary\">\r\n        <i class=\"fas fa-exclamation-triangle\"></i>\r\n        <span> 404 Page Not Found</span>\r\n    </h1>\r\n    <p class=\"lead\">Sorry this page does not exist</p>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { AlertService } from \"src/app/services/alert.service\";\r\nimport { AuthService } from \"../../../services/auth.service\"\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Auth } from \"../../../types/states\"\r\n\r\n@Component({\r\n    templateUrl: \"./signup.component.html\"\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private alertService: AlertService, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated;\r\n            if (this.isAuthenticated) {\r\n                this.router.navigate([\"/\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        if (form.value.password !== form.value.password2) {\r\n            this.alertService.setAlert('Password do not match', 'danger', 3000);\r\n        } else {\r\n            this.authService.signup(form.value.name, form.value.email, form.value.password);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n    }\r\n}\r\n","<Alert></Alert>\r\n<section class=\"container\">\r\n    <h1 class=\"large primary\">Sign Up</h1>\r\n    <p class=\"lead\">\r\n        <i class=\"fas fa-user\"></i>\r\n        <span class=\"hide-mobile\"> Create Your Account</span>\r\n    </p>\r\n    <form class=\"form\" (submit)=\"onSubmit(signupForm)\" #signupForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Full Name\"\r\n                name=\"name\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Email Address\"\r\n                name=\"email\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <input type=\"submit\" class=\"my-1 btn bg-primary\" value=\"Register\" />\r\n    </form>\r\n    <div>\r\n        <p>\r\n            Already have an account?\r\n        </p>\r\n        <a routerLink=\"/login\">Sign In</a>\r\n    </div>\r\n</section>\r\n<Footer></Footer>\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <a [routerLink]=\"['../../create-project-task', id]\" class=\"btn bg-light dark\">\r\n            <i class=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </a>\r\n        <hr class=\"my-1\"/>\r\n        <div class=\"project-task\">\r\n        \t<div>\r\n        \t\t<div class=\"project-task-category bg-dark\">\r\n            \t\t<h3 class=\"white\">\r\n            \t\t\tTODO\r\n            \t\t</h3>\r\n            \t</div>\r\n            \t<ProjectTaskItem *ngFor=\"let projectTask of todoItems\" [projectTask]=\"projectTask\" [project]=\"id\">\r\n                </ProjectTaskItem>\r\n        \t</div>\r\n        \t<div>\r\n        \t\t<div class=\"project-task-category bg-primary\">\r\n            \t\t<h3 class=\"white\">\r\n            \t\t\tIN-PROGRESS\r\n            \t\t</h3>\r\n            \t</div>\r\n            \t<ProjectTaskItem *ngFor=\"let projectTask of inProgressItems\" [projectTask]=\"projectTask\" [project]=\"id\">\r\n                </ProjectTaskItem>\r\n        \t</div>\r\n        \t<div>\r\n    \t\t\t<div class=\"project-task-category bg-success\">\r\n\t\t\t\t\t<h3 class=\"white\">\r\n\t\t\t\t\t\tDONE\r\n\t\t\t\t\t</h3>\r\n            \t</div>\r\n            \t<ProjectTaskItem *ngFor=\"let projectTask of doneItems\" [projectTask]=\"projectTask\" [project]=\"id\">    \r\n                </ProjectTaskItem> \r\n        \t</div>\r\n\t\t</div>\r\n    </section>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth, Project, ProjectTask } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./taskboard.component.html\"\r\n})\r\nexport class TaskBoardComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    projectTaskState: ProjectTask;\r\n    todoItems : any[] = [];\r\n    inProgressItems: any[] = [];\r\n    doneItems: any[] = [];\r\n    private id: string;\r\n    private authStateSub: Subscription;\r\n    private projectStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n    private projectTaskStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService, \r\n        private route: ActivatedRoute, private router: Router, private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState: Project) => {\r\n            if (projectState.loadedProject && projectState.project === null) {\r\n                this.projectService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            } else {\r\n                this.projectTaskService.getProjectTasks(this.id)\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectService.getProject(params[\"id\"]);\r\n            this.id = params[\"id\"]\r\n        })\r\n        this.projectTaskState = this.projectTaskService.getCurrentProjectTaskState();\r\n        this.projectTaskStateSub = this.projectTaskService.getProjectTaskStateSubject().subscribe((projectTaskState: ProjectTask) => {\r\n            this.todoItems = [];\r\n            this.inProgressItems = [];\r\n            this.doneItems = [];\r\n            this.projectTaskState = projectTaskState;\r\n            for (let i = 0; i < this.projectTaskState.projectTasks.length; i++) {\r\n                if (this.projectTaskState.projectTasks[i].status === \"TO DO\") {\r\n                    this.todoItems.push(this.projectTaskState.projectTasks[i]);\r\n                }\r\n          \r\n                if (this.projectTaskState.projectTasks[i].status === \"IN PROGRESS\") {\r\n                    this.inProgressItems.push(this.projectTaskState.projectTasks[i]);\r\n                }\r\n          \r\n                if (this.projectTaskState.projectTasks[i].status === \"DONE\") {\r\n                    this.doneItems.push(this.projectTaskState.projectTasks[i]);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n        this.projectTaskStateSub.unsubscribe()\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"Footer\",\r\n    templateUrl: \"./footer.component.html\"\r\n})\r\nexport class FooterComponent {}\r\n","<footer class=\"footer hide-mobile\">\r\n    <div class=\"item\">\r\n        <span>Author: Vincent Yang</span>\r\n        <p class=\"footer-links\">\r\n            <a href=\"https://vincent-yang.com\">Personal Website</a>\r\n            <span> | </span>\r\n            <a href=\"https://github.com/Yangv19\">Github</a>\r\n        </p>\r\n    </div>\r\n    <div class=\"item\">    \r\n        <div>\r\n            <i class=\"fa fa-phone\"></i>\r\n            <span> 647-636-3461</span>\r\n        </div>\r\n        <div>\r\n            <i class=\"fa fa-envelope\"></i>\r\n            <span> v6yang@uwaterloo.ca</span>\r\n        </div>\r\n    </div>\r\n</footer>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AlertService } from \"src/app/services/alert.service\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Auth } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./login.component.html\"\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private alertService: AlertService, private router: Router) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated;\r\n            if (this.isAuthenticated) {\r\n                this.router.navigate([\"/\"]);\r\n            }\r\n        });\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        this.authService.login(form.value.email, form.value.password);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n    }\r\n}\r\n","<Alert></Alert>\r\n<section class=\"container\">\r\n    <h1 class=\"large primary\">Sign In</h1>\r\n    <p class=\"lead\">\r\n        <i class=\"fas fa-user\"></i>\r\n        <span class=\"hide-mobile\"> Sign Into Your Account</span>\r\n    </p>\r\n    <form class=\"form\" (submit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Email Address\"\r\n                name=\"email\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                ngModel\r\n            />\r\n        </div>\r\n        <input type=\"submit\" class=\"btn bg-primary\" value=\"Login\" />\r\n    </form>\r\n    <div class=\"my-1\">\r\n        <p>\r\n            Don\"t have an account? \r\n        </p>\r\n        <a routerLink=\"/register\">Sign Up</a>\r\n    </div>\r\n</section>\r\n<Footer></Footer>\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"NotAuthorized\",\r\n    templateUrl: \"./not-authorized.component.html\"\r\n})\r\nexport class NotAuthorizedComponent {}\r\n","<Alert></Alert>\r\n<section class=\"container full\">\r\n    <h1 class=\"large text-primary\">\r\n        <i class=\"fas fa-skull-crossbones\"></i>\r\n        <span> 401 Not Authorized</span>\r\n    </h1>\r\n    <p class=\"lead\">Sorry you are not authorized to view this page</p>\r\n</section>\r\n<Footer></Footer>\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Spinner *ngIf=\"!projectState.loadedProjects\"></Spinner> \r\n    <Alert></Alert>\r\n    <section class=\"container\" *ngIf=\"projectState.loadedProjects\">\r\n        <h1 class=\"x-large center\">\r\n            Projects\r\n        </h1>\r\n        <a class=\"btn bg-light dark\" routerLink=\"../create-project\">\r\n            <i class=\"fas fa-plus-circle\"> Create A Project</i>\r\n        </a>\r\n        <hr class=\"my-1\"/>\r\n        <ProjectItem *ngFor=\"let project of projectState.projects\" [project]=\"project\"></ProjectItem>\r\n    </section>   \r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Project } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./dashboard.component.html\"\r\n})\r\nexport class DashboardComponent implements OnInit, OnDestroy{\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n    projectState: Project;\r\n    private projectStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState) => {\r\n            this.isAuthenticated = authState.isAuthenticated;\r\n        });\r\n        this.projectState = this.projectService.getCurrentProjectState();\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState) => {\r\n            this.projectState = projectState;\r\n        });\r\n        this.projectService.getProjects();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n        this.projectStateSub.unsubscribe();\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth, ProjectTask } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./update-project-task.component.html\"\r\n})\r\nexport class UpdateProjectTaskComponent implements OnInit, OnDestroy{\r\n    isAuthenticated : boolean;\r\n    projectTaskState: ProjectTask;\r\n    private id: string;\r\n    private authStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n    private projectTaskStateSub: Subscription;\r\n    form: FormGroup\r\n\r\n    constructor(private authService: AuthService, private route: ActivatedRoute, private router: Router, \r\n                private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        this.form = new FormGroup({\r\n            summary: new FormControl(null),\r\n            criteria: new FormControl(null),\r\n            due: new FormControl(null),\r\n            priority: new FormControl(null),\r\n            status: new FormControl(null)\r\n        })\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectTaskStateSub = this.projectTaskService.getProjectTaskStateSubject().subscribe((projectTaskState: ProjectTask) => {\r\n            this.projectTaskState = projectTaskState\r\n            if (projectTaskState.loadedProjectTask && projectTaskState.projectTask === null) {\r\n                this.projectTaskService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            } else {\r\n                this.form.setValue({\r\n                    summary: projectTaskState.projectTask.summary,\r\n                    criteria: projectTaskState.projectTask.criteria,\r\n                    due: projectTaskState.projectTask.due,\r\n                    priority: projectTaskState.projectTask.priority,\r\n                    status: projectTaskState.projectTask.status\r\n                })\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectTaskService.getProjectTask(params[\"projectId\"], params[\"projectTaskId\"]);\r\n            this.id = params[\"projectId\"];\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.projectTaskService.updateProjectTask(this.id, this.projectTaskState.projectTask.id, this.form.value.summary, \r\n                                                  this.form.value.criteria, this.form.value.due, this.form.value.priority, \r\n                                                  this.form.value.status)\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n        this.projectTaskStateSub.unsubscribe()\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary my-1\">Update Project Task Form</h1>\r\n\t\t\t<p class=\"lead\">\r\n\t\t\t\t<i class=\"fas fa-pen\"></i>\r\n\t\t\t\t<span class=\"hide-mobile\"> Update This Project Task</span>\r\n\t\t\t</p>\r\n\t\t\t<form class=\"form\" [formGroup]=\"form\" (submit)=\"onSubmit()\"> \r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<input \r\n                        type=\"text\" \r\n                        placeholder=\"Project Task summary\"\r\n                        formControlName=\"summary\" \r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<textarea \r\n                        placeholder=\"Acceptance Criteria\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        formControlName=\"criteria\">\r\n                    </textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<span>Due Date: </span>\r\n\t\t\t\t\t<input\r\n                        type=\"date\"\r\n                        formControlName=\"due\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                    <select formControlName=\"priority\">\r\n\t\t\t\t\t\t<option value=\"\">Select Priority</option>\r\n\t\t\t\t\t\t<option value=\"HIGH\">HIGH</option>\r\n\t\t\t\t\t\t<option value=\"MEDIUM\">MEDIUM</option>\r\n\t\t\t\t\t\t<option value=\"LOW\">LOW</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n                    <select formControlName=\"status\"> \r\n\t\t\t\t\t\t<option value=\"\">Select Status</option>\r\n\t\t\t\t\t\t<option value=\"TO DO\">TO DO</option>\r\n\t\t\t\t\t\t<option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n\t\t\t\t\t\t<option value=\"DONE\">DONE</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n\t\t\t</form>\r\n    </section>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    if (localStorage.token) {\n      this.authService.loadUser();\n    }\n  }\n}\n","<Navbar></Navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { LoginComponent } from \"../components/auth/login/login.component\";\r\nimport { SignUpComponent } from \"../components/auth/signup/signup.component\";\r\nimport { LandingComponent } from \"../components/basic/landing/landing.component\";\r\nimport { NotFoundComponent } from \"../components/basic/not-found/not-found.component\";\r\nimport { CreateProjectComponent } from \"../components/dashboard/create-project/create-project.component\";\r\nimport { DashboardComponent } from \"../components/dashboard/dashboard.component\";\r\nimport { UpdateProjectComponent } from \"../components/dashboard/update-project/update-project.component\";\r\nimport { CreateProjectTaskComponent } from \"../components/taskboard/create-project-task/create-project-task.component\";\r\nimport { TaskBoardComponent } from \"../components/taskboard/taskboard.component\";\r\nimport { UpdateProjectTaskComponent } from \"../components/taskboard/update-project-task/update-project-task.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"\",\r\n        component: LandingComponent\r\n    },\r\n    {\r\n        path: \"register\",\r\n        component: SignUpComponent\r\n    },\r\n    {\r\n        path: \"login\",\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent\r\n    },\r\n    {\r\n        path: \"create-project\",\r\n        component: CreateProjectComponent\r\n    },\r\n    {\r\n        path: \"update-project/:id\",\r\n        component: UpdateProjectComponent\r\n    },\r\n    {\r\n        path: \"taskboard/:id\",\r\n        component: TaskBoardComponent\r\n    },\r\n    {\r\n        path: \"create-project-task/:id\",\r\n        component: CreateProjectTaskComponent\r\n    },\r\n    {\r\n        path: \"update-project-task/:projectId/:projectTaskId\",\r\n        component: UpdateProjectTaskComponent\r\n    },\r\n    {\r\n        path: \"**\",\r\n        component: NotFoundComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: []\r\n})\r\nexport class AppRoutingModule {}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from './app.component';\nimport { ErrorInterceptor } from './services/error.service';\nimport { HeaderInterceptor } from './services/header.service';\nimport { NavbarComponent } from './components/layout/navbar/navbar.component';\nimport { AlertComponent } from './components/layout/alert/alert.component';\nimport { FooterComponent } from './components/layout/footer/footer.component';\nimport { LandingComponent } from './components/basic/landing/landing.component';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { SignUpComponent } from './components/auth/signup/signup.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { NotFoundComponent } from './components/basic/not-found/not-found.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { NotAuthorizedComponent } from './components/basic/not-authorized/not-authorized.component';\nimport { SpinnerComponent } from './components/layout/spinner/spinner.component';\nimport { ProjectItemComponent } from './components/dashboard/project-item/project-item.component';\nimport { CreateProjectComponent } from './components/dashboard/create-project/create-project.component';\nimport { UpdateProjectComponent } from './components/dashboard/update-project/update-project.component';\nimport { TaskBoardComponent } from './components/taskboard/taskboard.component';\nimport { ProjectTaskItemComponent } from './components/taskboard/project-task-item/project-task-item.component';\nimport { CreateProjectTaskComponent } from './components/taskboard/create-project-task/create-project-task.component';\nimport { UpdateProjectTaskComponent } from './components/taskboard/update-project-task/update-project-task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    AlertComponent,\n    FooterComponent,\n    LandingComponent,\n    SignUpComponent,\n    LoginComponent,\n    NotFoundComponent,\n    NotAuthorizedComponent,\n    DashboardComponent,\n    SpinnerComponent,\n    ProjectItemComponent,\n    CreateProjectComponent,\n    UpdateProjectComponent,\n    TaskBoardComponent,\n    ProjectTaskItemComponent,\n    CreateProjectTaskComponent,\n    UpdateProjectTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HeaderInterceptor,\n      multi: true\n    },  \n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\"\r\nimport { Project } from \"../types/states\"\r\nimport { Subject } from \"rxjs\";\r\nimport { AlertService } from \"./alert.service\";\r\nimport { ProjectForm } from \"../types/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nconst BACKEND_URL = environment.proxy;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class ProjectService {\r\n    private projectStateSubject = new Subject<Project>();\r\n    private initialState : Project = {\r\n        projects: [],\r\n        project: null,\r\n        loadedProjects: false,\r\n        loadedProject: false\r\n    }\r\n    private currentState : Project = {\r\n        ...this.initialState\r\n    }\r\n\r\n    constructor(private http : HttpClient, private alertService: AlertService, private router: Router) {}\r\n\r\n    getCurrentProjectState() {\r\n        return this.currentState;\r\n    }\r\n\r\n    getProjectStateSubject() {\r\n        return this.projectStateSubject.asObservable();\r\n    }\r\n\r\n    getProjects() {\r\n        this.http.get<any[]>(BACKEND_URL + \"/api/projects\").subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projects: res,\r\n                loadedProjects: true\r\n            }\r\n            this.projectStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    deleteProject(id : string) {\r\n        this.http.delete(BACKEND_URL + \"/api/projects/\" + id).subscribe(res => {\r\n            this.alertService.setAlert(\"Post Removed\", \"success\");\r\n            this.getProjects();\r\n        })\r\n    }\r\n\r\n    createProject(name: string, description: string, begin: string, end: string) {\r\n        const formData: ProjectForm = {\r\n            name,\r\n            description,\r\n            begin,\r\n            end\r\n        }\r\n        this.http.post(BACKEND_URL + \"/api/projects\", formData).subscribe(res => {\r\n            this.alertService.setAlert(\"Project Created\", \"success\");\r\n            this.router.navigate([\"dashboard\"]);\r\n        })\r\n    }\r\n\r\n    getProject(id : string) {\r\n        this.http.get<any[]>(BACKEND_URL + \"/api/projects/\" + id).subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                project: res,\r\n                loadedProject: true\r\n            }\r\n            this.projectStateSubject.next({\r\n                ...this.currentState});\r\n        }, err => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                project: null,\r\n                loadedProject: true\r\n            }\r\n            this.projectStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    resetState() {\r\n        this.currentState = {\r\n            ...this.initialState\r\n        }\r\n    }\r\n\r\n    updateProject(id: string, name: string, description: string, begin: string, end: string) {\r\n        const formData: ProjectForm = {\r\n            name,\r\n            description,\r\n            begin,\r\n            end\r\n        }\r\n        this.http.patch(BACKEND_URL + \"/api/projects/\" + id, formData).subscribe(res => {\r\n            this.alertService.setAlert(\"Post updated\", \"success\");\r\n            this.router.navigate([\"dashboard\"]);\r\n        })\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"Spinner\",\r\n    templateUrl: \"./spinner.component.html\"\r\n})\r\nexport class SpinnerComponent{}\r\n","<img\r\n    src=\"assets/img/spinner.gif\"\r\n    alt=\"\"\r\n    class=\"spinner\"\r\n>\r\n","<div *ngFor=\"let alert of alerts\" class=\"alert bg-{{alert.alertType}}\">\r\n    {{alert.msg}}\r\n</div>\r\n","import { Component, OnDestroy, OnInit  } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Alert } from \"../../../types/states\"\r\nimport { AlertService } from \"../../../services/alert.service\"\r\n\r\n@Component({\r\n    selector: \"Alert\",\r\n    templateUrl: \"./alert.component.html\"\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    alerts: Alert[];\r\n    private alertStateSub: Subscription;\r\n\r\n    constructor(private alertService: AlertService) {}\r\n    \r\n    ngOnInit() {\r\n        this.alerts = this.alertService.getCurrentAlertState();\r\n        this.alertStateSub = this.alertService.getAlertStateSubject().subscribe((alertState : Alert[]) => {\r\n            this.alerts = alertState;\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.alertStateSub.unsubscribe();\r\n    }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { environment } from \"../../environments/environment\"\r\nimport { AlertService } from \"./alert.service\";\r\nimport { ProjectTask } from \"../types/states\"\r\nimport { ProjectTaskForm } from \"../types/forms\";\r\n\r\nconst BACKEND_URL = environment.proxy;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class ProjectTaskService {\r\n    private projectTaskStateSubject = new Subject<ProjectTask>();\r\n    private initialState : ProjectTask = {\r\n        projectTasks: [],\r\n        projectTask: null,\r\n        loadedProjectTasks: false,\r\n        loadedProjectTask: false\r\n    }\r\n    private currentState : ProjectTask = {\r\n        ...this.initialState\r\n    }\r\n\r\n    constructor(private http : HttpClient, private alertService: AlertService, private router: Router) {}\r\n\r\n    getCurrentProjectTaskState() {\r\n        return this.currentState;\r\n    }\r\n\r\n    getProjectTaskStateSubject() {\r\n        return this.projectTaskStateSubject.asObservable();\r\n    }\r\n\r\n    getProjectTasks(id: string) {\r\n        this.http.get<any[]>(BACKEND_URL + \"/api/projectTasks/\" + id).subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projectTasks: res,\r\n                loadedProjectTasks: true\r\n            }\r\n            this.projectTaskStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    deleteProjectTask(projectId: string, projectTaskId: string) {\r\n        this.http.delete(BACKEND_URL + \"/api/projectTasks/\" + projectId + \"/\" + projectTaskId).subscribe(res => {\r\n            this.alertService.setAlert(\"Project Task Removed\", \"success\")\r\n            this.getProjectTasks(projectId);\r\n        })\r\n    }\r\n\r\n    createProjectTask(projectId: string, summary: string, criteria: string, due: string, priority: string, status: string) {\r\n        const formData : ProjectTaskForm = {\r\n            summary,\r\n            criteria,\r\n            due,\r\n            priority,\r\n            status\r\n        }\r\n        this.http.post(BACKEND_URL + \"/api/projectTasks/\" + projectId, formData).subscribe(res => {\r\n            this.alertService.setAlert(\"ProjectTask Created\", \"success\");\r\n            this.router.navigate([\"taskboard/\" + projectId]);\r\n        })\r\n    }\r\n\r\n    getProjectTask(projectId: string, projectTaskId: string) {\r\n        this.http.get(BACKEND_URL + \"/api/projectTasks/\" + projectId + \"/\" + projectTaskId).subscribe(res => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projectTask: res,\r\n                loadedProjectTask: true\r\n            }\r\n            this.projectTaskStateSubject.next({\r\n                ...this.currentState});\r\n        }, err => {\r\n            this.currentState = {\r\n                ...this.currentState,\r\n                projectTask: null,\r\n                loadedProjectTask: true\r\n            }\r\n            this.projectTaskStateSubject.next({\r\n                ...this.currentState});\r\n        })\r\n    }\r\n\r\n    resetState() {\r\n        this.currentState = {\r\n            ...this.initialState\r\n        }\r\n    }\r\n\r\n    updateProjectTask(projectId: string, projectTaskId: string, summary: string, criteria: string, due: string, priority: string, status: string) {\r\n        const formData: ProjectTaskForm = {\r\n            summary,\r\n            criteria,\r\n            due,\r\n            priority,\r\n            status\r\n        }\r\n        this.http.patch(BACKEND_URL + \"/api/projectTasks/\" + projectId + \"/\" + projectTaskId, formData).subscribe(res => {\r\n            this.alertService.setAlert(\"Project Task updated\", \"success\");\r\n            this.router.navigate([\"taskboard/\" + projectId]);\r\n        })\r\n    }\r\n}\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary\">Create Project Form</h1>\r\n        <p class=\"lead\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            <span class=\"hide-mobile\"> Create A New Project</span>\r\n        </p>\r\n        <form class=\"form\" #createProjectForm=\"ngForm\" (submit)=\"onSubmit(createProjectForm)\">\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Name\" \r\n                    name=\"name\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <span>Start Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"start\"\r\n                    ngModel\r\n                />\r\n                <span>End Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"end\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n        </form>\r\n    </section>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { Auth } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./create-project.component.html\"\r\n})\r\nexport class CreateProjectComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        this.projectService.createProject(form.value.name, form.value.description, form.value.start, form.value.end);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n    }\r\n}\r\n","import { HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class HeaderInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (localStorage.token) {\r\n            const authRequest = req.clone({\r\n                headers: req.headers.set(\"x-auth-token\", localStorage.token)\r\n            });\r\n            return next.handle(authRequest);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\n\r\n@Component({\r\n    selector: \"ProjectTaskItem\",\r\n    templateUrl: \"./project-task-item.component.html\"\r\n})\r\nexport class ProjectTaskItemComponent implements OnInit {\r\n    @Input() \r\n    projectTask: any;\r\n\r\n    @Input()\r\n    project: string;\r\n\r\n    priorityClass: string;\r\n\r\n    constructor(private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        if (this.projectTask.priority === \"HIGH\") {\r\n            this.priorityClass = \"bg-danger\";\r\n        };\r\n      \r\n        if (this.projectTask.priority === \"MEDIUM\") {\r\n            this.priorityClass = \"bg-yellow\";\r\n        };\r\n    \r\n        if (this.projectTask.priority === \"LOW\") {\r\n            this.priorityClass = \"bg-light-blue\";\r\n        };\r\n    }\r\n\r\n    onClick(projectId: string, projectTaskId: string) {\r\n        this.projectTaskService.deleteProjectTask(projectId, projectTaskId);\r\n    }\r\n}\r\n","<div class=\"bg-gray project-task-item\">\r\n    <h4 class={{priorityClass}}>\r\n        Priority: {{projectTask.priority}}\r\n    </h4>\r\n    <h4>{{projectTask.summary}}</h4>\r\n    <h4>{{projectTask.criteria}}</h4>\r\n    <h4>Deadline: {{projectTask.due.slice(0, 10)}}</h4>\r\n    <a [routerLink]=\"['../../update-project-task', project, projectTask.id]\" class=\"btn bg-primary\">\r\n        Update\r\n    </a>\r\n    <div class=\"btn bg-danger\" (click)=\"onClick(project, projectTask.id)\">\r\n        Delete\r\n    </div>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../environments/environment\"\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { Auth } from \"../types/states\"\r\nimport { Subject } from \"rxjs\";\r\nimport { RegisterForm, LoginForm } from \"../types/forms\"\r\n\r\nconst BACKEND_URL = environment.proxy;\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n    private authStateSubject = new Subject<Auth>();\r\n    private initialAuthState: Auth = {\r\n        isAuthenticated: false,\r\n        user: null\r\n    }\r\n    private currentState : Auth = {\r\n        ...this.initialAuthState\r\n    }\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    loadUser() {\r\n        this.http.get(BACKEND_URL + \"/api/users\").subscribe(res => {\r\n            this.currentState.isAuthenticated = true;\r\n            this.currentState.user = res;\r\n            this.authStateSubject.next({\r\n                isAuthenticated : true, \r\n                user : res});\r\n        })\r\n    }\r\n\r\n    getCurrentAuthState() {\r\n        return this.currentState;\r\n    }\r\n\r\n    getAuthStateSubject() {\r\n        return this.authStateSubject.asObservable();\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"token\");\r\n        this.currentState = {\r\n            ...this.initialAuthState\r\n        }\r\n        this.authStateSubject.next(this.initialAuthState);\r\n    }\r\n\r\n    signup(name: string, email: string, password: string) {\r\n        const formData: RegisterForm = {\r\n            name,\r\n            email,\r\n            password\r\n        }\r\n        this.http.post<{token: string}>(BACKEND_URL + \"/api/users/register\", formData).subscribe(res => {\r\n            localStorage.setItem(\"token\", res.token);\r\n            this.loadUser();\r\n        })\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        const formData: LoginForm = {\r\n            email,\r\n            password\r\n        }\r\n        this.http.post<{token: string}>(BACKEND_URL + \"/api/users/login\", formData).subscribe(res => {\r\n            localStorage.setItem(\"token\", res.token);\r\n            this.loadUser();\r\n        })\r\n    }\r\n}\r\n","import { Component, Input } from \"@angular/core\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\n\r\n@Component({\r\n    selector: \"ProjectItem\",\r\n    templateUrl: \"./project-item.component.html\"\r\n})\r\nexport class ProjectItemComponent {\r\n    @Input() \r\n    project: any;\r\n\r\n    constructor(private projectService: ProjectService) {}\r\n\r\n    onClick(id : string) {\r\n        this.projectService.deleteProject(id);\r\n    }\r\n}\r\n","<div class=\"project\">\r\n    <div class=\"project-1\">\r\n        <div>\r\n            <h4>Deadline:</h4>\r\n            <h4>{{project.end.slice(0, 10)}}</h4>\r\n        </div>\r\n        <div>\r\n            <h4 class=\"lead\">\r\n                {{project.name}}\r\n            </h4>\r\n            <h4 class=\"gray\">\r\n                {{project.description}}\r\n            </h4>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <a [routerLink]=\"['../taskboard', project.id]\" class=\"project-button light\">\r\n            <i class=\"fa fa-flag-checkered\"></i>\r\n            <span class=\"hide-mobile\">\r\n                Project Board\r\n            </span>\r\n        </a>\r\n        <a [routerLink]=\"['../update-project', project.id]\" class=\"project-button success\">\r\n            <i class=\"fa fa-edit\"></i>\r\n            <span class=\"hide-mobile\">\r\n                Update Project Info\r\n            </span>\r\n        </a>\r\n        <div class=\"project-button danger\">\r\n            <i class=\"fa fa-minus-circle\"></i>\r\n            <span class=\"hide-mobile\" (click)=\"onClick(project.id)\">\r\n                Delete Project\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<NotAuthorized *ngIf=\"!isAuthenticated\"></NotAuthorized>\r\n<div *ngIf=\"isAuthenticated\">\r\n    <Alert></Alert>\r\n    <section class=\"container\">\r\n        <h1 class=\"large primary my-1\">Create Project Task Form</h1>\r\n        <p class=\"lead\">\r\n            <i class=\"fas fa-plus\"></i>\r\n            <span class=\"hide-mobile\"> Create A New Project Task</span>\r\n        </p>\r\n        <form class=\"form\" #createProjectTaskForm=\"ngForm\" (submit)=\"onSubmit(createProjectTaskForm)\">\r\n            <div class=\"form-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Project Task summary\" \r\n                    name=\"summary\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <textarea\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    name=\"criteria\"\r\n                    ngModel>\r\n                </textarea>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <span>Due Date: </span>\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"due\"\r\n                    ngModel\r\n                />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <select name=\"priority\" ngModel>\r\n                    <option value=\"\">Select Priority</option>\r\n                    <option value=\"HIGH\">HIGH</option>\r\n                    <option value=\"MEDIUM\">MEDIUM</option>\r\n                    <option value=\"LOW\">LOW</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <select name=\"status\" ngModel>\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO DO\">TO DO</option>\r\n                    <option value=\"IN PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                </select>\r\n            </div>\r\n            <input type=\"submit\" class=\"my-1 btn bg-primary\" />\r\n        </form>\r\n    </section>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { ProjectTaskService } from \"src/app/services/project-task.service\";\r\nimport { ProjectService } from \"src/app/services/project.service\";\r\nimport { Auth, Project } from \"src/app/types/states\";\r\n\r\n@Component({\r\n    templateUrl: \"./create-project-task.component.html\"\r\n})\r\nexport class CreateProjectTaskComponent implements OnInit, OnDestroy{\r\n    isAuthenticated : boolean;\r\n    private id;\r\n    private authStateSub: Subscription;\r\n    private projectStateSub: Subscription;\r\n    private routeSub: Subscription;\r\n\r\n    constructor(private authService: AuthService, private projectService: ProjectService, \r\n        private route: ActivatedRoute, private router: Router, private projectTaskService: ProjectTaskService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState: Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated\r\n        });\r\n        this.projectStateSub = this.projectService.getProjectStateSubject().subscribe((projectState: Project) => {\r\n            if (projectState.loadedProject && projectState.project === null) {\r\n                this.projectService.resetState();\r\n                this.router.navigate([\"/NotFound\"])\r\n            }\r\n        });\r\n        this.routeSub = this.route.params.subscribe(params => {\r\n            this.projectService.getProject(params[\"id\"]);\r\n            this.id = params[\"id\"];\r\n        })\r\n    }\r\n\r\n    onSubmit(form : NgForm) {\r\n        this.projectTaskService.createProjectTask(this.id, form.value.summary, form.value.criteria, form.value.due,\r\n                                                  form.value.priority, form.value.status);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe()\r\n        this.projectStateSub.unsubscribe()\r\n        this.routeSub.unsubscribe()\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","<nav class=\"navbar bg-primary\">\r\n    <h2>\r\n        <a routerLink=\"/\">\r\n            <i class=\"fas fa-tasks\"></i>\r\n            <span class=\"hide-mobile\"> Personal Project Management Tool</span>\r\n        </a>\r\n    </h2>\r\n    <ul *ngIf=\"isAuthenticated\">\r\n        <li>\r\n            <a routerLink=\"/dashboard\">\r\n                <i class=\"fas fa-columns\"></i>\r\n                <span class=\"hide-mobile\"> Dashboard</span>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a (click)=\"logout()\">\r\n                <i class=\"fas fa-sign-out-alt\"></i>\r\n                <span class=\"hide-mobile\"> Logout</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n    <ul *ngIf=\"!isAuthenticated\">\r\n        <li>\r\n            <a routerLink=\"/register\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                <span class=\"hide-mobile\"> Register</span>\r\n            </a>\r\n        </li>\r\n        <li>\r\n            <a routerLink=\"/login\">\r\n                <i class=\"fas fa-sign-in-alt\"></i>\r\n                <span class=\"hide-mobile\"> Login</span>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"../../../services/auth.service\"\r\nimport { Auth } from \"../../../types/states\"\r\n\r\n@Component({\r\n    selector: 'Navbar',\r\n    templateUrl: './navbar.component.html'\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n    isAuthenticated : boolean;\r\n    private authStateSub: Subscription;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.isAuthenticated = this.authService.getCurrentAuthState().isAuthenticated;\r\n        this.authStateSub = this.authService.getAuthStateSubject().subscribe((authState : Auth) => {\r\n            this.isAuthenticated = authState.isAuthenticated;\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        this.authService.logout();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authStateSub.unsubscribe();\r\n    }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}